{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport api from \"../apis/index.js\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../Redux/actions\"; // const SignInModal = ({ show, onHide, setSignInModalOn, setLoginStatus }) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInModal = ({\n  show,\n  onHide,\n  setSignInModalOn\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\"); // const [signInClicked, setSignInClicked] = useState(false);\n\n  const [signInMessage, setSignInMessage] = useState(null);\n\n  function validateSignIn(userEmail, userPassword) {\n    if (userEmail !== \"\" & !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)) {\n      setSignInMessage(\"이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n\n    if (userEmail === \"\" || userPassword === \"\") {\n      setSignInMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    }\n\n    setSignInMessage(null);\n    return true;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if (signInClicked) return;\n\n    if (!validateSignIn(userEmail, userPassword)) return;\n    setSignInMessage(null); // setSignInClicked(true);\n\n    postSignIn();\n  };\n\n  const postSignIn = async () => {\n    let signInData = {\n      email: userEmail,\n      pwd: userPassword\n    }; // 1단계: 로그인 요청\n\n    let res = await api.post(\"/user/login\", signInData);\n    console.log(\"res\", res);\n\n    if (res.data.result !== \"success\") {\n      setSignInMessage(\"이메일과 패스워드가 일치하지 않습니다.\");\n      return; // setSignInClicked(false);\n    }\n\n    let user = res.data;\n    delete user.result;\n    user.login = true;\n    user.challenges = []; // 2단계: 유저 관련 정보 확인 (참여중 챌린지 등)\n\n    res = await api.get(\"/user/personalinfo\");\n\n    if (res.data.result === \"success\") {\n      user.challenges = res.data.Challenge;\n    } // 리덕스에 저장\n\n\n    dispatch(actions.checkUser(user));\n    setSignInModalOn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        onClick: () => {\n          setUserEmail(\"\");\n          setUserPassword(\"\");\n          setSignInMessage(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: styles.form__input,\n              type: \"email\",\n              placeholder: \"helloalien@jungle.com\",\n              onChange: e => {\n                setUserEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"********\",\n              onChange: e => {\n                setUserPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: styles.form__signin__message,\n            children: [signInMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"my-3\",\n            type: \"button\",\n            variant: \"success\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: handleSubmit,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInModal, \"keVET9191w8TLUyiiKE27UcJOLQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignInModal;\nexport default SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js"],"names":["React","useState","Button","Container","Form","Modal","styles","api","useDispatch","actions","SignInModal","show","onHide","setSignInModalOn","dispatch","userEmail","setUserEmail","userPassword","setUserPassword","signInMessage","setSignInMessage","validateSignIn","test","handleSubmit","e","preventDefault","postSignIn","signInData","email","pwd","res","post","console","log","data","result","user","login","challenges","get","Challenge","checkUser","container","form__input","target","value","form__signin__message","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport api from \"../apis/index.js\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../Redux/actions\";\n\n// const SignInModal = ({ show, onHide, setSignInModalOn, setLoginStatus }) => {\nconst SignInModal = ({ show, onHide, setSignInModalOn }) => {\n  const dispatch = useDispatch();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  // const [signInClicked, setSignInClicked] = useState(false);\n  const [signInMessage, setSignInMessage] = useState(null);\n\n  function validateSignIn(userEmail, userPassword) {\n    if (\n      (userEmail !== \"\") &\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)\n    ) {\n      setSignInMessage(\"이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n\n    if (userEmail === \"\" || userPassword === \"\") {\n      setSignInMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    }\n\n    setSignInMessage(null);\n    return true;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (signInClicked) return;\n    if (!validateSignIn(userEmail, userPassword)) return;\n    setSignInMessage(null);\n    // setSignInClicked(true);\n    postSignIn();\n  };\n\n  const postSignIn = async () => {\n    let signInData = { email: userEmail, pwd: userPassword };\n    // 1단계: 로그인 요청\n    let res = await api.post(\"/user/login\", signInData);\n    console.log(\"res\", res);\n    if (res.data.result !== \"success\") {\n      setSignInMessage(\"이메일과 패스워드가 일치하지 않습니다.\");\n      return;\n      // setSignInClicked(false);\n    }\n    let user = res.data;\n    delete user.result;\n    user.login = true;\n    user.challenges = [];\n    // 2단계: 유저 관련 정보 확인 (참여중 챌린지 등)\n    res = await api.get(\"/user/personalinfo\");\n    if (res.data.result === \"success\") {\n      user.challenges = res.data.Challenge;\n    }\n    // 리덕스에 저장\n    dispatch(actions.checkUser(user));\n    setSignInModalOn(false);\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container className={styles.container}>\n        <Modal.Header\n          closeButton\n          onClick={() => {\n            setUserEmail(\"\");\n            setUserPassword(\"\");\n            setSignInMessage(null);\n          }}\n        >\n          <Modal.Title id=\"contained-modal-title-vcenter\">로그인</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                className={styles.form__input}\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group className={styles.form__signin__message}>\n              {signInMessage}\n              <br />\n            </Form.Group>\n\n            <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={handleSubmit}\n            >\n              로그인\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default SignInModal;\n"]},"metadata":{},"sourceType":"module"}