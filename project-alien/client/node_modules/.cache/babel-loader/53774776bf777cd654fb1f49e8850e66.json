{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport SideBarModal from \"./SideBarModal\";\nimport ChatModal from \"./ChatModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\nimport { CHAL_INFO_TYPE } from \"../../../Redux/reducers/modalOnOff\";\nimport { HiOutlineClipboardList } from 'react-icons/hi';\nimport { BsChatDots } from 'react-icons/bs';\nimport classNames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nexport default function ListCtrl(props) {\n  _s();\n\n  const dispatch = useDispatch(); // const { user } = useSelector(({ user }) => ({ user: user.user }));\n\n  const {\n    chalInfoModal\n  } = useSelector(({\n    modalOnOff\n  }) => ({\n    chalInfoModal: modalOnOff.chalInfoModal\n  }));\n\n  function switchModal(modalType) {\n    if (modalType === chalInfoModal) {\n      dispatch(actions.setChalInfoModal(null));\n    } else {\n      dispatch(actions.setChalInfoModal(modalType));\n    }\n  }\n\n  const challengeMatch = useMatch(\"/challenge/:challengeId/room\");\n  const mainMatch = useMatch(\"/\");\n\n  if (!!mainMatch) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"btn\", \"btn--list\"),\n      onClick: () => switchModal(CHAL_INFO_TYPE.ALIEN),\n      children: /*#__PURE__*/_jsxDEV(HiOutlineClipboardList, {\n        size: 28\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !!challengeMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"btn\", \"btn--chat\"),\n      onClick: () => switchModal(CHAL_INFO_TYPE.CHAT),\n      children: /*#__PURE__*/_jsxDEV(BsChatDots, {\n        size: 23\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideBarModal, {\n      modalType: CHAL_INFO_TYPE.ALIEN,\n      handleSelectAlien: props.handleSelectAlien\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatModal, {\n      modalType: CHAL_INFO_TYPE.CHAT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListCtrl, \"U8NrFN8TWcMwiZWQgAsudTByWyE=\", false, function () {\n  return [useDispatch, useSelector, useMatch, useMatch];\n});\n\n_c = ListCtrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCtrl\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/index.js"],"names":["React","useMatch","styles","SideBarModal","ChatModal","useDispatch","useSelector","actions","CHAL_INFO_TYPE","HiOutlineClipboardList","BsChatDots","classNames","cx","bind","ListCtrl","props","dispatch","chalInfoModal","modalOnOff","switchModal","modalType","setChalInfoModal","challengeMatch","mainMatch","body","ALIEN","CHAT","handleSelectAlien"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AAEA,SAAQC,sBAAR,QAAqC,gBAArC;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AACA,MAAMC,EAAE,GAAGD,UAAU,CAACE,IAAX,CAAgBX,MAAhB,CAAX;AAEA,eAAe,SAASY,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CADsC,CAEtC;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAoBX,WAAW,CAAC,CAAC;AAAEY,IAAAA;AAAF,GAAD,MAAqB;AACzDD,IAAAA,aAAa,EAAEC,UAAU,CAACD;AAD+B,GAArB,CAAD,CAArC;;AAIA,WAASE,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,QAAIA,SAAS,KAAKH,aAAlB,EAAiC;AAC/BD,MAAAA,QAAQ,CAACT,OAAO,CAACc,gBAAR,CAAyB,IAAzB,CAAD,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,CAACT,OAAO,CAACc,gBAAR,CAAyBD,SAAzB,CAAD,CAAR;AACD;AACF;;AAED,QAAME,cAAc,GAAGrB,QAAQ,CAAC,8BAAD,CAA/B;AACA,QAAMsB,SAAS,GAAGtB,QAAQ,CAAC,GAAD,CAA1B;;AACA,MAAI,CAAC,CAACsB,SAAN,EAAiB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,IAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAEZ,EAAE,CAAC,KAAD,EAAQ,WAAR,CADf;AAEE,MAAA,OAAO,EAAE,MAAMO,WAAW,CAACX,cAAc,CAACiB,KAAhB,CAF5B;AAAA,6BAIA,QAAC,sBAAD;AAAwB,QAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,YADF,EAOG,CAAC,CAACH,cAAF,iBACC;AACA,MAAA,SAAS,EAAEV,EAAE,CAAC,KAAD,EAAQ,WAAR,CADb;AAEA,MAAA,OAAO,EAAE,MAAMO,WAAW,CAACX,cAAc,CAACkB,IAAhB,CAF1B;AAAA,6BAIE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YARJ,eAeE,QAAC,YAAD;AACE,MAAA,SAAS,EAAElB,cAAc,CAACiB,KAD5B;AAEE,MAAA,iBAAiB,EAAEV,KAAK,CAACY;AAF3B;AAAA;AAAA;AAAA;AAAA,YAfF,eAmBE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEnB,cAAc,CAACkB;AAArC;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA5CuBZ,Q;UACLT,W,EAESC,W,EAYHL,Q,EACLA,Q;;;KAhBIa,Q","sourcesContent":["import React from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\n\nimport SideBarModal from \"./SideBarModal\";\nimport ChatModal from \"./ChatModal\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\nimport { CHAL_INFO_TYPE } from \"../../../Redux/reducers/modalOnOff\";\n\nimport {HiOutlineClipboardList} from 'react-icons/hi'\nimport {BsChatDots} from 'react-icons/bs'\nimport classNames from \"classnames/bind\";\nconst cx = classNames.bind(styles);\n\nexport default function ListCtrl(props) {\n  const dispatch = useDispatch();\n  // const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const { chalInfoModal } = useSelector(({ modalOnOff }) => ({\n    chalInfoModal: modalOnOff.chalInfoModal,\n  }));\n\n  function switchModal(modalType) {\n    if (modalType === chalInfoModal) {\n      dispatch(actions.setChalInfoModal(null));\n    } else {\n      dispatch(actions.setChalInfoModal(modalType));\n    }\n  }\n\n  const challengeMatch = useMatch(\"/challenge/:challengeId/room\");\n  const mainMatch = useMatch(\"/\");\n  if (!!mainMatch) {\n    return <div></div>;\n  }\n  \n  return (\n    <div className={styles.body}>\n      <div\n        className={cx(\"btn\", \"btn--list\")}\n        onClick={() => switchModal(CHAL_INFO_TYPE.ALIEN)}\n      >\n      <HiOutlineClipboardList size={28}/>\n      </div>\n      {!!challengeMatch && (\n        <div\n        className={cx(\"btn\", \"btn--chat\")}\n        onClick={() => switchModal(CHAL_INFO_TYPE.CHAT)}\n        >\n          <BsChatDots size={23}/>\n        </div>\n      )}\n      <SideBarModal\n        modalType={CHAL_INFO_TYPE.ALIEN}\n        handleSelectAlien={props.handleSelectAlien}\n      />\n      <ChatModal modalType={CHAL_INFO_TYPE.CHAT} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}