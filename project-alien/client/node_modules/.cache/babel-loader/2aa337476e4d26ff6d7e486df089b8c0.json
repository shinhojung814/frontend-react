{"ast":null,"code":"import io from \"socket.io-client\";\nlet socket = null;\nconst SOCKET_URL = process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5001\";\nexport function init(userinfo) {\n  socket = io(SOCKET_URL);\n  console.log(\"[socket] init\", SOCKET_URL);\n  socket.on(\"connect\", () => {\n    console.log(\"[socket] connect\");\n  });\n\n  if (socket && userinfo.id && userinfo.challenges) {\n    console.log(\"[socket] join\", userinfo.id, userinfo.challenges);\n    socket.emit(\"join\", userinfo);\n  }\n}\nexport function disconnect(roomId) {\n  if (!socket) return;\n  console.log(\"[socket] disconnect\", roomId);\n  socket.disconnect();\n}\nexport function sendMessage(message) {\n  if (!socket) return;\n  socket.emit(\"send_message\", message);\n}\nexport function receiveMessage(handler) {\n  console.log(\"[socket] receiveMessage\");\n  if (!socket) return;\n  socket.on(\"receive_message\", handler);\n}\nexport function blockMessage() {\n  if (!socket) return;\n  console.log(\"[socket] blockMessage\");\n  socket.off(\"receive_message\");\n} // // // // // // // // // // // // // // // // // // // //\n// // // // // // // to update // // // // // // // // // //\n\nexport function usersOnRoom(handler) {\n  if (!socket) return;\n  console.log(\"[socket] usersOnRoom\");\n  socket.on(\"usersOnRoom\", handler);\n}","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/apis/socket.js"],"names":["io","socket","SOCKET_URL","process","env","NODE_ENV","init","userinfo","console","log","on","id","challenges","emit","disconnect","roomId","sendMessage","message","receiveMessage","handler","blockMessage","off","usersOnRoom"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA,MAAMC,UAAU,GACdC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,GAAxC,GAA8C,uBADhD;AAGA,OAAO,SAASC,IAAT,CAAcC,QAAd,EAAwB;AAC7BN,EAAAA,MAAM,GAAGD,EAAE,CAACE,UAAD,CAAX;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,UAA7B;AACAD,EAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFD;;AAGA,MAAIR,MAAM,IAAIM,QAAQ,CAACI,EAAnB,IAAyBJ,QAAQ,CAACK,UAAtC,EAAkD;AAChDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACI,EAAtC,EAA0CJ,QAAQ,CAACK,UAAnD;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoBN,QAApB;AACD;AACF;AAED,OAAO,SAASO,UAAT,CAAoBC,MAApB,EAA4B;AACjC,MAAI,CAACd,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,MAAnC;AACAd,EAAAA,MAAM,CAACa,UAAP;AACD;AAED,OAAO,SAASE,WAAT,CAAqBC,OAArB,EAA8B;AACnC,MAAI,CAAChB,MAAL,EAAa;AACbA,EAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ,EAA4BI,OAA5B;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtCX,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,MAAI,CAACR,MAAL,EAAa;AACbA,EAAAA,MAAM,CAACS,EAAP,CAAU,iBAAV,EAA6BS,OAA7B;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,MAAI,CAACnB,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAR,EAAAA,MAAM,CAACoB,GAAP,CAAW,iBAAX;AACD,C,CAED;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBH,OAArB,EAA8B;AACnC,MAAI,CAAClB,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAR,EAAAA,MAAM,CAACS,EAAP,CAAU,aAAV,EAAyBS,OAAzB;AACD","sourcesContent":["import io from \"socket.io-client\";\nlet socket = null;\n\nconst SOCKET_URL =\n  process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5001\";\n\nexport function init(userinfo) {\n  socket = io(SOCKET_URL);\n  console.log(\"[socket] init\", SOCKET_URL);\n  socket.on(\"connect\", () => {\n    console.log(\"[socket] connect\");\n  });\n  if (socket && userinfo.id && userinfo.challenges) {\n    console.log(\"[socket] join\", userinfo.id, userinfo.challenges);\n    socket.emit(\"join\", userinfo);\n  }\n}\n\nexport function disconnect(roomId) {\n  if (!socket) return;\n  console.log(\"[socket] disconnect\", roomId);\n  socket.disconnect();\n}\n\nexport function sendMessage(message) {\n  if (!socket) return;\n  socket.emit(\"send_message\", message);\n}\n\nexport function receiveMessage(handler) {\n  console.log(\"[socket] receiveMessage\");\n  if (!socket) return;\n  socket.on(\"receive_message\", handler);\n}\n\nexport function blockMessage() {\n  if (!socket) return;\n  console.log(\"[socket] blockMessage\");\n  socket.off(\"receive_message\");\n}\n\n// // // // // // // // // // // // // // // // // // // //\n// // // // // // // to update // // // // // // // // // //\n\nexport function usersOnRoom(handler) {\n  if (!socket) return;\n  console.log(\"[socket] usersOnRoom\");\n  socket.on(\"usersOnRoom\", handler);\n}\n"]},"metadata":{},"sourceType":"module"}