{"ast":null,"code":"import Vector2D from \"../lib/Vector2D.js\";\n\nclass Camera {\n  constructor() {\n    this.getGradientPct = () => {\n      // TODO: 배경 이미지로 변경\n      if (!this.cvsHeight || !this.center.y) return [0.4, 0.6];\n      let baseY = this.cvsHeight;\n      let pct1 = (baseY * 0.4 - this.center.y / this.level) / baseY;\n      pct1 = Math.min(Math.max(pct1, 0), 1);\n      let pct2 = (baseY * 0.6 - this.center.y / this.level) / baseY;\n      pct2 = Math.min(Math.max(pct2, 0), 1); // console.log(this.level, pct1, pct2);\n\n      return [pct1, pct2];\n    };\n\n    this.getCanvasSize = size => {\n      // TODO: level과 ratio 범위 확정되면 계산 효율화\n      return size * (this.ratioMin + this.ratioRange * ((this.level - this.levelMin) / this.levelRange));\n    };\n\n    this.getCanvasPlanetSize = size => {\n      return size * (this.planetRatioMin + this.planetRatioRange * ((this.level - this.levelMin) / this.levelRange));\n    };\n\n    this.getLocalFromMouse = coord => {\n      // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n      console.log(\"TODO getLocalFromMouse\", coord);\n      return coord;\n    };\n\n    this.getEventLocation = e => {\n      // TODO: integrate with setMouseLocal\n      let x, y;\n\n      if (e.touches && e.touches.length === 1) {\n        x = e.touches[0].clientX;\n        y = e.touches[0].clientY;\n      } else {\n        x = e.clientX;\n        y = e.clientY;\n      }\n\n      return {\n        x,\n        y\n      };\n    };\n\n    this.resetEveryFrame = () => {\n      this.isClicked = false;\n    };\n\n    this.onMouseDown = e => {\n      // console.log(\"camera onMouseDown\");\n      e.preventDefault();\n      let evtLocal = this.getEventLocation(e);\n      this.isMouseDown = true;\n      this.isDragging = false;\n      this.dragFrom.x = evtLocal.x;\n      this.dragFrom.y = evtLocal.y;\n      this.centerFrom.x = this.center.x;\n      this.centerFrom.y = this.center.y;\n      this.cancelChasing();\n    };\n\n    this.onMouseMove = e => {\n      // console.log(\"camera onMouseMove\", this.isDragging);\n      if (!this.isMouseDown) return;\n      let evtLocal = this.getEventLocation(e);\n      let pxLimit = 2;\n\n      if (Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit || Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit) {\n        this.isDragging = true;\n      }\n\n      if (this.isDragging) {\n        let x = this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n        let y = this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n        this.setCenter(x, y);\n      }\n    };\n\n    this.onMouseUp = e => {\n      // console.log(\"camera onMouseUp\");\n      if (this.isMouseDown && !this.isDragging) {\n        this.isClicked = true;\n      }\n\n      this.isMouseDown = false;\n      this.isDragging = false;\n    };\n\n    this.onTouchStart = e => this.handleTouch(e, this.onMouseDown);\n\n    this.onTouchMove = e => this.handleTouch(e, this.onMouseMove);\n\n    this.onTouchEnd = e => this.handleTouch(e, this.onMouseUp);\n\n    this.onWheel = e => {// console.log(\"camera onWheel\");\n    };\n\n    this.onResize = (cvsWidth, cvsHeight) => {\n      this.cvsWidth = cvsWidth;\n      this.cvsHeight = cvsHeight; // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n    };\n\n    this.handleTouch = (e, singleTouchHandler) => {\n      if (e.touches.length <= 1) {\n        singleTouchHandler(e);\n      } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n        this.isDragging = false; // TODO\n        // this.handlePinch(e);\n      }\n    };\n\n    this.origin = {\n      x: 0,\n      y: 0\n    };\n    this.center = {\n      x: 0,\n      y: 0\n    };\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = 7; //this.levelDefault;\n\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.planetRatioMin = 1.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n    this.planetRatioRange = this.ratioMax - this.planetRatioMin;\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n    this.chasingTarget = null;\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.acceleration = {\n      x: 0,\n      y: 0\n    };\n    this.maxSpeed = 15;\n    this.maxForce = 5;\n    this.seekLimit = 50;\n    this.chasingLimit = 10; // 우선순위: chasing > mousedown(drag, click)\n  }\n\n  setChasingTarget(target, cb) {\n    this.chasingTarget = target;\n    this.cancelChasingCallback = cb;\n  }\n\n  cancelChasing() {\n    if (!this.chasingTarget) return;\n    this.chasingTarget = null;\n    this.cancelChasingCallback();\n  }\n\n  run() {\n    if (!!this.chasingTarget) {\n      let x = this.getCanvasSize(this.chasingTarget.location.x);\n      let y = this.getCanvasSize(this.chasingTarget.location.y);\n      let force = this.seek({\n        x,\n        y\n      });\n\n      if (!!force) {\n        this.applyForce(force);\n        this.update();\n      } else {\n        this.center.x = x;\n        this.center.y = y;\n      }\n    }\n  }\n\n  seek(target) {\n    let desired = {\n      x: target.x,\n      y: target.y\n    };\n    Vector2D.sub(desired, this.center);\n    let dist = Vector2D.getMag(desired);\n    Vector2D.normalize(desired);\n\n    if (dist < this.chasingLimit) {\n      return false;\n    } else if (dist < this.seekLimit) {\n      let speed = dist / this.seekLimit * this.maxSpeed;\n      Vector2D.mult(desired, speed);\n    } else {\n      Vector2D.mult(desired, this.maxSpeed);\n    }\n\n    Vector2D.sub(desired, this.velocity);\n    Vector2D.limit(desired, this.maxForce);\n    return desired;\n  }\n\n  applyForce(force) {\n    Vector2D.add(this.acceleration, force);\n  }\n\n  update() {\n    Vector2D.add(this.velocity, this.acceleration);\n    Vector2D.limit(this.velocity, this.maxSpeed);\n    Vector2D.mult(this.velocity, 0.99);\n    Vector2D.add(this.center, this.velocity);\n    Vector2D.mult(this.acceleration, 0);\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(this.levelMax, Math.round(this.level + this.levelStep)); // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(this.levelMin, Math.round(this.level - this.levelStep)); // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/shared/room/Camera.js"],"names":["Vector2D","Camera","constructor","getGradientPct","cvsHeight","center","y","baseY","pct1","level","Math","min","max","pct2","getCanvasSize","size","ratioMin","ratioRange","levelMin","levelRange","getCanvasPlanetSize","planetRatioMin","planetRatioRange","getLocalFromMouse","coord","console","log","getEventLocation","e","x","touches","length","clientX","clientY","resetEveryFrame","isClicked","onMouseDown","preventDefault","evtLocal","isMouseDown","isDragging","dragFrom","centerFrom","cancelChasing","onMouseMove","pxLimit","abs","dragRatio","setCenter","onMouseUp","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onWheel","onResize","cvsWidth","singleTouchHandler","type","origin","undefined","levelDefault","levelStep","levelMax","ratioMax","initPinchDist","chasingTarget","velocity","acceleration","maxSpeed","maxForce","seekLimit","chasingLimit","setChasingTarget","target","cb","cancelChasingCallback","run","location","force","seek","applyForce","update","desired","sub","dist","getMag","normalize","speed","mult","limit","add","setLevel","zoomIn","round","zoomOut"],"mappings":"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","sourcesContent":["import Vector2D from \"../lib/Vector2D.js\";\n\nclass Camera {\n  constructor() {\n    this.origin = { x: 0, y: 0 };\n    this.center = { x: 0, y: 0 };\n\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = 7; //this.levelDefault;\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.planetRatioMin = 1.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n    this.planetRatioRange = this.ratioMax - this.planetRatioMin;\n\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = { x: 0, y: 0 };\n    this.dragFrom = { x: 0, y: 0 };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n\n    this.chasingTarget = null;\n    this.velocity = { x: 0, y: 0 };\n    this.acceleration = { x: 0, y: 0 };\n    this.maxSpeed = 15;\n    this.maxForce = 5;\n    this.seekLimit = 50;\n    this.chasingLimit = 10;\n\n    // 우선순위: chasing > mousedown(drag, click)\n  }\n\n  setChasingTarget(target, cb) {\n    this.chasingTarget = target;\n    this.cancelChasingCallback = cb;\n  }\n\n  cancelChasing() {\n    if (!this.chasingTarget) return;\n    this.chasingTarget = null;\n    this.cancelChasingCallback();\n  }\n\n  run() {\n    if (!!this.chasingTarget) {\n      let x = this.getCanvasSize(this.chasingTarget.location.x);\n      let y = this.getCanvasSize(this.chasingTarget.location.y);\n\n      let force = this.seek({ x, y });\n      if (!!force) {\n        this.applyForce(force);\n        this.update();\n      } else {\n        this.center.x = x;\n        this.center.y = y;\n      }\n    }\n  }\n\n  seek(target) {\n    let desired = { x: target.x, y: target.y };\n    Vector2D.sub(desired, this.center);\n\n    let dist = Vector2D.getMag(desired);\n    Vector2D.normalize(desired);\n    if (dist < this.chasingLimit) {\n      return false;\n    } else if (dist < this.seekLimit) {\n      let speed = (dist / this.seekLimit) * this.maxSpeed;\n      Vector2D.mult(desired, speed);\n    } else {\n      Vector2D.mult(desired, this.maxSpeed);\n    }\n\n    Vector2D.sub(desired, this.velocity);\n    Vector2D.limit(desired, this.maxForce);\n\n    return desired;\n  }\n\n  applyForce(force) {\n    Vector2D.add(this.acceleration, force);\n  }\n\n  update() {\n    Vector2D.add(this.velocity, this.acceleration);\n    Vector2D.limit(this.velocity, this.maxSpeed);\n    Vector2D.mult(this.velocity, 0.99);\n    Vector2D.add(this.center, this.velocity);\n    Vector2D.mult(this.acceleration, 0);\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(\n      this.levelMax,\n      Math.round(this.level + this.levelStep)\n    );\n    // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(\n      this.levelMin,\n      Math.round(this.level - this.levelStep)\n    );\n    // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  getGradientPct = () => {\n    // TODO: 배경 이미지로 변경\n    if (!this.cvsHeight || !this.center.y) return [0.4, 0.6];\n\n    let baseY = this.cvsHeight;\n    let pct1 = (baseY * 0.4 - this.center.y / this.level) / baseY;\n    pct1 = Math.min(Math.max(pct1, 0), 1);\n    let pct2 = (baseY * 0.6 - this.center.y / this.level) / baseY;\n    pct2 = Math.min(Math.max(pct2, 0), 1);\n    // console.log(this.level, pct1, pct2);\n    return [pct1, pct2];\n  };\n\n  getCanvasSize = (size) => {\n    // TODO: level과 ratio 범위 확정되면 계산 효율화\n    return (\n      size *\n      (this.ratioMin +\n        this.ratioRange * ((this.level - this.levelMin) / this.levelRange))\n    );\n  };\n\n  getCanvasPlanetSize = (size) => {\n    return (\n      size *\n      (this.planetRatioMin +\n        this.planetRatioRange *\n          ((this.level - this.levelMin) / this.levelRange))\n    );\n  };\n\n  getLocalFromMouse = (coord) => {\n    // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n    console.log(\"TODO getLocalFromMouse\", coord);\n    return coord;\n  };\n\n  getEventLocation = (e) => {\n    // TODO: integrate with setMouseLocal\n    let x, y;\n    if (e.touches && e.touches.length === 1) {\n      x = e.touches[0].clientX;\n      y = e.touches[0].clientY;\n    } else {\n      x = e.clientX;\n      y = e.clientY;\n    }\n    return { x, y };\n  };\n\n  resetEveryFrame = () => {\n    this.isClicked = false;\n  };\n\n  onMouseDown = (e) => {\n    // console.log(\"camera onMouseDown\");\n    e.preventDefault();\n    let evtLocal = this.getEventLocation(e);\n    this.isMouseDown = true;\n    this.isDragging = false;\n    this.dragFrom.x = evtLocal.x;\n    this.dragFrom.y = evtLocal.y;\n    this.centerFrom.x = this.center.x;\n    this.centerFrom.y = this.center.y;\n    this.cancelChasing();\n  };\n\n  onMouseMove = (e) => {\n    // console.log(\"camera onMouseMove\", this.isDragging);\n    if (!this.isMouseDown) return;\n    let evtLocal = this.getEventLocation(e);\n    let pxLimit = 2;\n    if (\n      Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit ||\n      Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit\n    ) {\n      this.isDragging = true;\n    }\n\n    if (this.isDragging) {\n      let x =\n        this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n      let y =\n        this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n      this.setCenter(x, y);\n    }\n  };\n\n  onMouseUp = (e) => {\n    // console.log(\"camera onMouseUp\");\n    if (this.isMouseDown && !this.isDragging) {\n      this.isClicked = true;\n    }\n    this.isMouseDown = false;\n    this.isDragging = false;\n  };\n\n  onTouchStart = (e) => this.handleTouch(e, this.onMouseDown);\n  onTouchMove = (e) => this.handleTouch(e, this.onMouseMove);\n  onTouchEnd = (e) => this.handleTouch(e, this.onMouseUp);\n\n  onWheel = (e) => {\n    // console.log(\"camera onWheel\");\n  };\n\n  onResize = (cvsWidth, cvsHeight) => {\n    this.cvsWidth = cvsWidth;\n    this.cvsHeight = cvsHeight;\n    // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n  };\n\n  handleTouch = (e, singleTouchHandler) => {\n    if (e.touches.length <= 1) {\n      singleTouchHandler(e);\n    } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n      this.isDragging = false;\n      // TODO\n      // this.handlePinch(e);\n    }\n  };\n}\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}