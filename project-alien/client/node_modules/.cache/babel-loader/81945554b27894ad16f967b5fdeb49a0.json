{"ast":null,"code":"import io from \"socket.io-client\";\nlet socket = null; // temp\n\nconst SOCKET_URL = process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5001\";\nexport function initAndJoin(info) {\n  // https://stackoverflow.com/questions/44628363/socket-io-access-control-allow-origin-error/64805972\n  // socket = io(SOCKET_URL, { transports: [\"websocket\"] });\n  socket = io(SOCKET_URL);\n  console.log(\"[socket] init\", SOCKET_URL);\n  socket.on(\"connect\", () => {\n    console.log(\"[socket] connect\");\n  });\n\n  if (socket && info.roomId) {\n    console.log(\"[socket] join\", info);\n    socket.emit(\"join\", info);\n  }\n}\nexport function disconnect(roomId) {\n  if (!socket) return;\n  console.log(\"[socket] disconnect\", roomId);\n  socket.disconnect();\n} // export function subscribe(handler) {\n//   if (!socket) return;\n//   console.log(\"[socket] fieldState\");\n//   socket.on(\"fieldState\", handler);\n// }\n\nexport function usersOnRoom(handler) {\n  if (!socket) return;\n  console.log(\"[socket] usersOnRoom\");\n  socket.on(\"usersOnRoom\", handler);\n}\nexport function changeDestination(roomId, destination) {\n  if (!socket) return;\n  console.log(\"[socket] changeDestination\");\n  let monster = {\n    destination // temp\n    // location: destination,\n\n  };\n  socket.emit(\"changeDestination\", {\n    roomId,\n    monster\n  });\n}","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/apis/socket.js"],"names":["io","socket","SOCKET_URL","process","env","NODE_ENV","initAndJoin","info","console","log","on","roomId","emit","disconnect","usersOnRoom","handler","changeDestination","destination","monster"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,IAAIC,MAAM,GAAG,IAAb,C,CAEA;;AACA,MAAMC,UAAU,GACdC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,GAAxC,GAA8C,uBADhD;AAGA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAChC;AACA;AACAN,EAAAA,MAAM,GAAGD,EAAE,CAACE,UAAD,CAAX;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,UAA7B;AACAD,EAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFD;;AAGA,MAAIR,MAAM,IAAIM,IAAI,CAACI,MAAnB,EAA2B;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACAN,IAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoBL,IAApB;AACD;AACF;AAED,OAAO,SAASM,UAAT,CAAoBF,MAApB,EAA4B;AACjC,MAAI,CAACV,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,MAAnC;AACAV,EAAAA,MAAM,CAACY,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AACnC,MAAI,CAACd,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAR,EAAAA,MAAM,CAACS,EAAP,CAAU,aAAV,EAAyBK,OAAzB;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BL,MAA3B,EAAmCM,WAAnC,EAAgD;AACrD,MAAI,CAAChB,MAAL,EAAa;AACbO,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,MAAIS,OAAO,GAAG;AACZD,IAAAA,WADY,CAEZ;AACA;;AAHY,GAAd;AAKAhB,EAAAA,MAAM,CAACW,IAAP,CAAY,mBAAZ,EAAiC;AAAED,IAAAA,MAAF;AAAUO,IAAAA;AAAV,GAAjC;AACD","sourcesContent":["import io from \"socket.io-client\";\nlet socket = null;\n\n// temp\nconst SOCKET_URL =\n  process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5001\";\n\nexport function initAndJoin(info) {\n  // https://stackoverflow.com/questions/44628363/socket-io-access-control-allow-origin-error/64805972\n  // socket = io(SOCKET_URL, { transports: [\"websocket\"] });\n  socket = io(SOCKET_URL);\n  console.log(\"[socket] init\", SOCKET_URL);\n  socket.on(\"connect\", () => {\n    console.log(\"[socket] connect\");\n  });\n  if (socket && info.roomId) {\n    console.log(\"[socket] join\", info);\n    socket.emit(\"join\", info);\n  }\n}\n\nexport function disconnect(roomId) {\n  if (!socket) return;\n  console.log(\"[socket] disconnect\", roomId);\n  socket.disconnect();\n}\n\n// export function subscribe(handler) {\n//   if (!socket) return;\n//   console.log(\"[socket] fieldState\");\n//   socket.on(\"fieldState\", handler);\n// }\nexport function usersOnRoom(handler) {\n  if (!socket) return;\n  console.log(\"[socket] usersOnRoom\");\n  socket.on(\"usersOnRoom\", handler);\n}\n\nexport function changeDestination(roomId, destination) {\n  if (!socket) return;\n  console.log(\"[socket] changeDestination\");\n  let monster = {\n    destination,\n    // temp\n    // location: destination,\n  };\n  socket.emit(\"changeDestination\", { roomId, monster });\n}\n"]},"metadata":{},"sourceType":"module"}