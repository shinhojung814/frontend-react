{"ast":null,"code":"class Camera {\n  constructor() {\n    this.getGradientPct = () => {\n      // TODO: 배경 이미지로 변경\n      if (!this.cvsHeight || !this.center.y) return [0.4, 0.6];\n      let baseY = this.cvsHeight;\n      let pct1 = (baseY * 0.4 - this.center.y / this.level) / baseY;\n      pct1 = Math.min(Math.max(pct1, 0), 1);\n      let pct2 = (baseY * 0.6 - this.center.y / this.level) / baseY;\n      pct2 = Math.min(Math.max(pct2, 0), 1); // console.log(this.level, pct1, pct2);\n\n      return [pct1, pct2];\n    };\n\n    this.getCanvasSize = size => {\n      // TODO: level과 ratio 범위 확정되면 계산 효율화\n      return size * (this.ratioMin + this.ratioRange * ((this.level - this.levelMin) / this.levelRange));\n    };\n\n    this.getLocalFromMouse = coord => {\n      // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n      console.log(\"TODO getLocalFromMouse\", coord);\n      return coord;\n    };\n\n    this.getEventLocation = e => {\n      // TODO: integrate with setMouseLocal\n      let x, y;\n\n      if (e.touches && e.touches.length === 1) {\n        x = e.touches[0].clientX;\n        y = e.touches[0].clientY;\n      } else {\n        x = e.clientX;\n        y = e.clientY;\n      }\n\n      return {\n        x,\n        y\n      };\n    };\n\n    this.resetEveryFrame = () => {\n      this.isClicked = false;\n    };\n\n    this.onMouseDown = e => {\n      // console.log(\"camera onMouseDown\");\n      e.preventDefault();\n      let evtLocal = this.getEventLocation(e);\n      this.isMouseDown = true;\n      this.isDragging = false;\n      this.dragFrom.x = evtLocal.x;\n      this.dragFrom.y = evtLocal.y;\n      this.centerFrom.x = this.center.x;\n      this.centerFrom.y = this.center.y;\n    };\n\n    this.onMouseMove = e => {\n      // console.log(\"camera onMouseMove\", this.isDragging);\n      if (!this.isMouseDown) return;\n      let evtLocal = this.getEventLocation(e);\n      let pxLimit = 2;\n\n      if (Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit || Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit) {\n        this.isDragging = true;\n      }\n\n      if (this.isDragging) {\n        let x = this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n        let y = this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n        this.setCenter(x, y);\n      }\n    };\n\n    this.onMouseUp = e => {\n      // console.log(\"camera onMouseUp\");\n      if (this.isMouseDown && !this.isDragging) {\n        this.isClicked = true;\n      }\n\n      this.isMouseDown = false;\n      this.isDragging = false;\n    };\n\n    this.onTouchStart = e => this.handleTouch(e, this.onMouseDown);\n\n    this.onTouchMove = e => this.handleTouch(e, this.onMouseMove);\n\n    this.onTouchEnd = e => this.handleTouch(e, this.onMouseUp);\n\n    this.onWheel = e => {\n      console.log(\"camera onWheel\");\n    };\n\n    this.onResize = (cvsWidth, cvsHeight) => {\n      this.cvsWidth = cvsWidth;\n      this.cvsHeight = cvsHeight; // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n    };\n\n    this.handleTouch = (e, singleTouchHandler) => {\n      if (e.touches.length <= 1) {\n        singleTouchHandler(e);\n      } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n        this.isDragging = false; // TODO\n        // this.handlePinch(e);\n      }\n    };\n\n    this.origin = {\n      x: 0,\n      y: 0\n    };\n    this.center = {\n      x: 0,\n      y: 0\n    };\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = 7; //this.levelDefault;\n\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(this.levelMax, Math.round(this.level + this.levelStep)); // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(this.levelMin, Math.round(this.level - this.levelStep)); // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/shared/room/Camera.js"],"names":["Camera","constructor","getGradientPct","cvsHeight","center","y","baseY","pct1","level","Math","min","max","pct2","getCanvasSize","size","ratioMin","ratioRange","levelMin","levelRange","getLocalFromMouse","coord","console","log","getEventLocation","e","x","touches","length","clientX","clientY","resetEveryFrame","isClicked","onMouseDown","preventDefault","evtLocal","isMouseDown","isDragging","dragFrom","centerFrom","onMouseMove","pxLimit","abs","dragRatio","setCenter","onMouseUp","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onWheel","onResize","cvsWidth","singleTouchHandler","type","origin","undefined","levelDefault","levelStep","levelMax","ratioMax","initPinchDist","setLevel","zoomIn","round","zoomOut"],"mappings":"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","sourcesContent":["class Camera {\n  constructor() {\n    this.origin = { x: 0, y: 0 };\n    this.center = { x: 0, y: 0 };\n\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = 7; //this.levelDefault;\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = { x: 0, y: 0 };\n    this.dragFrom = { x: 0, y: 0 };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(\n      this.levelMax,\n      Math.round(this.level + this.levelStep)\n    );\n    // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(\n      this.levelMin,\n      Math.round(this.level - this.levelStep)\n    );\n    // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  getGradientPct = () => {\n    // TODO: 배경 이미지로 변경\n    if (!this.cvsHeight || !this.center.y) return [0.4, 0.6];\n\n    let baseY = this.cvsHeight;\n    let pct1 = (baseY * 0.4 - this.center.y / this.level) / baseY;\n    pct1 = Math.min(Math.max(pct1, 0), 1);\n    let pct2 = (baseY * 0.6 - this.center.y / this.level) / baseY;\n    pct2 = Math.min(Math.max(pct2, 0), 1);\n    // console.log(this.level, pct1, pct2);\n    return [pct1, pct2];\n  };\n\n  getCanvasSize = (size) => {\n    // TODO: level과 ratio 범위 확정되면 계산 효율화\n    return (\n      size *\n      (this.ratioMin +\n        this.ratioRange * ((this.level - this.levelMin) / this.levelRange))\n    );\n  };\n\n  getLocalFromMouse = (coord) => {\n    // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n    console.log(\"TODO getLocalFromMouse\", coord);\n    return coord;\n  };\n\n  getEventLocation = (e) => {\n    // TODO: integrate with setMouseLocal\n    let x, y;\n    if (e.touches && e.touches.length === 1) {\n      x = e.touches[0].clientX;\n      y = e.touches[0].clientY;\n    } else {\n      x = e.clientX;\n      y = e.clientY;\n    }\n    return { x, y };\n  };\n\n  resetEveryFrame = () => {\n    this.isClicked = false;\n  };\n\n  onMouseDown = (e) => {\n    // console.log(\"camera onMouseDown\");\n    e.preventDefault();\n    let evtLocal = this.getEventLocation(e);\n    this.isMouseDown = true;\n    this.isDragging = false;\n    this.dragFrom.x = evtLocal.x;\n    this.dragFrom.y = evtLocal.y;\n    this.centerFrom.x = this.center.x;\n    this.centerFrom.y = this.center.y;\n  };\n\n  onMouseMove = (e) => {\n    // console.log(\"camera onMouseMove\", this.isDragging);\n    if (!this.isMouseDown) return;\n    let evtLocal = this.getEventLocation(e);\n    let pxLimit = 2;\n    if (\n      Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit ||\n      Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit\n    ) {\n      this.isDragging = true;\n    }\n\n    if (this.isDragging) {\n      let x =\n        this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n      let y =\n        this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n      this.setCenter(x, y);\n    }\n  };\n\n  onMouseUp = (e) => {\n    // console.log(\"camera onMouseUp\");\n    if (this.isMouseDown && !this.isDragging) {\n      this.isClicked = true;\n    }\n    this.isMouseDown = false;\n    this.isDragging = false;\n  };\n\n  onTouchStart = (e) => this.handleTouch(e, this.onMouseDown);\n  onTouchMove = (e) => this.handleTouch(e, this.onMouseMove);\n  onTouchEnd = (e) => this.handleTouch(e, this.onMouseUp);\n\n  onWheel = (e) => {\n    console.log(\"camera onWheel\");\n  };\n\n  onResize = (cvsWidth, cvsHeight) => {\n    this.cvsWidth = cvsWidth;\n    this.cvsHeight = cvsHeight;\n    // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n  };\n\n  handleTouch = (e, singleTouchHandler) => {\n    if (e.touches.length <= 1) {\n      singleTouchHandler(e);\n    } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n      this.isDragging = false;\n      // TODO\n      // this.handlePinch(e);\n    }\n  };\n}\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}