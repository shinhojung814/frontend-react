{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport * as types from \"../actions/ActionTypes\";\nconst initialState = {\n  roomId: null,\n  roomTitle: null,\n  aliens: [],\n  selectedAlien: null,\n  challenge: {},\n  messages: []\n};\nconst room = handleActions({\n  // 화면에 나타나는 alien들을 페이지별로 다르게 받아옴\n  [types.CURRENT_ROOM]: (state, {\n    payload: {\n      roomId,\n      aliens,\n      roomTitle,\n      challenge\n    }\n  }) => ({ ...state,\n    roomId: roomId,\n    roomTitle: roomTitle || null,\n    aliens: aliens || [],\n    selectedAlien: null,\n    challenge: challenge || {},\n    messages: []\n  }),\n  [types.SELECT_ALIEN]: (state, {\n    payload: selectedAlien\n  }) => ({ ...state,\n    selectedAlien: selectedAlien\n  }),\n  [types.GRADUATE_ALIEN]: (state, {\n    payload: alienId\n  }) => ({ ...state,\n    aliens: state.aliens.map(alien => alien.id === alienId ? { ...alien,\n      alien_status: 1\n    } : alien)\n  }),\n  [types.REQUEST_AUTH]: (state, {\n    payload: alienId\n  }) => ({ ...state,\n    aliens: state.aliens.map(alien => alien.id === alienId ? { ...alien,\n      practice_status: 1\n    } : alien)\n  }),\n  [types.APPROVE_AUTH]: (state, {\n    payload: alienId\n  }) => ({ ...state,\n    aliens: state.aliens.map(alien => alien.id === alienId ? { ...alien,\n      practice_status: 2\n    } : alien)\n  }),\n  [types.MESSAGE_UPDATE]: (state, {\n    payload: msgArray\n  }) => ({ ...state,\n    messages: [...state.messages, ...msgArray]\n  })\n}, initialState);\nexport default room;","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/Redux/reducers/room.js"],"names":["handleActions","types","initialState","roomId","roomTitle","aliens","selectedAlien","challenge","messages","room","CURRENT_ROOM","state","payload","SELECT_ALIEN","GRADUATE_ALIEN","alienId","map","alien","id","alien_status","REQUEST_AUTH","practice_status","APPROVE_AUTH","MESSAGE_UPDATE","msgArray"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,aAAa,EAAE,IAJI;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;AASA,MAAMC,IAAI,GAAGT,aAAa,CACxB;AACE;AACA,GAACC,KAAK,CAACS,YAAP,GAAsB,CACpBC,KADoB,EAEpB;AAAEC,IAAAA,OAAO,EAAE;AAAET,MAAAA,MAAF;AAAUE,MAAAA,MAAV;AAAkBD,MAAAA,SAAlB;AAA6BG,MAAAA;AAA7B;AAAX,GAFoB,MAGhB,EACJ,GAAGI,KADC;AAEJR,IAAAA,MAAM,EAAEA,MAFJ;AAGJC,IAAAA,SAAS,EAAEA,SAAS,IAAI,IAHpB;AAIJC,IAAAA,MAAM,EAAEA,MAAM,IAAI,EAJd;AAKJC,IAAAA,aAAa,EAAE,IALX;AAMJC,IAAAA,SAAS,EAAEA,SAAS,IAAI,EANpB;AAOJC,IAAAA,QAAQ,EAAE;AAPN,GAHgB,CAFxB;AAeE,GAACP,KAAK,CAACY,YAAP,GAAsB,CAACF,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEN;AAAX,GAAR,MAAwC,EAC5D,GAAGK,KADyD;AAE5DL,IAAAA,aAAa,EAAEA;AAF6C,GAAxC,CAfxB;AAoBE,GAACL,KAAK,CAACa,cAAP,GAAwB,CAACH,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEG;AAAX,GAAR,MAAkC,EACxD,GAAGJ,KADqD;AAExDN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaW,GAAb,CAAkBC,KAAD,IACvBA,KAAK,CAACC,EAAN,KAAaH,OAAb,GAAuB,EAAE,GAAGE,KAAL;AAAYE,MAAAA,YAAY,EAAE;AAA1B,KAAvB,GAAuDF,KADjD;AAFgD,GAAlC,CApB1B;AA2BE,GAAChB,KAAK,CAACmB,YAAP,GAAsB,CAACT,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEG;AAAX,GAAR,MAAkC,EACtD,GAAGJ,KADmD;AAEtDN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaW,GAAb,CAAkBC,KAAD,IACvBA,KAAK,CAACC,EAAN,KAAaH,OAAb,GAAuB,EAAE,GAAGE,KAAL;AAAYI,MAAAA,eAAe,EAAE;AAA7B,KAAvB,GAA0DJ,KADpD;AAF8C,GAAlC,CA3BxB;AAkCE,GAAChB,KAAK,CAACqB,YAAP,GAAsB,CAACX,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEG;AAAX,GAAR,MAAkC,EACtD,GAAGJ,KADmD;AAEtDN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaW,GAAb,CAAkBC,KAAD,IACvBA,KAAK,CAACC,EAAN,KAAaH,OAAb,GAAuB,EAAE,GAAGE,KAAL;AAAYI,MAAAA,eAAe,EAAE;AAA7B,KAAvB,GAA0DJ,KADpD;AAF8C,GAAlC,CAlCxB;AAyCE,GAAChB,KAAK,CAACsB,cAAP,GAAwB,CAACZ,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEY;AAAX,GAAR,MAAmC,EACzD,GAAGb,KADsD;AAEzDH,IAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB,GAAGgB,QAAvB;AAF+C,GAAnC;AAzC1B,CADwB,EA+CxBtB,YA/CwB,CAA1B;AAiDA,eAAeO,IAAf","sourcesContent":["import { handleActions } from \"redux-actions\";\nimport * as types from \"../actions/ActionTypes\";\n\nconst initialState = {\n  roomId: null,\n  roomTitle: null,\n  aliens: [],\n  selectedAlien: null,\n  challenge: {},\n  messages: [],\n};\n\nconst room = handleActions(\n  {\n    // 화면에 나타나는 alien들을 페이지별로 다르게 받아옴\n    [types.CURRENT_ROOM]: (\n      state,\n      { payload: { roomId, aliens, roomTitle, challenge } }\n    ) => ({\n      ...state,\n      roomId: roomId,\n      roomTitle: roomTitle || null,\n      aliens: aliens || [],\n      selectedAlien: null,\n      challenge: challenge || {},\n      messages: [],\n    }),\n\n    [types.SELECT_ALIEN]: (state, { payload: selectedAlien }) => ({\n      ...state,\n      selectedAlien: selectedAlien,\n    }),\n\n    [types.GRADUATE_ALIEN]: (state, { payload: alienId }) => ({\n      ...state,\n      aliens: state.aliens.map((alien) =>\n        alien.id === alienId ? { ...alien, alien_status: 1 } : alien\n      ),\n    }),\n\n    [types.REQUEST_AUTH]: (state, { payload: alienId }) => ({\n      ...state,\n      aliens: state.aliens.map((alien) =>\n        alien.id === alienId ? { ...alien, practice_status: 1 } : alien\n      ),\n    }),\n\n    [types.APPROVE_AUTH]: (state, { payload: alienId }) => ({\n      ...state,\n      aliens: state.aliens.map((alien) =>\n        alien.id === alienId ? { ...alien, practice_status: 2 } : alien\n      ),\n    }),\n\n    [types.MESSAGE_UPDATE]: (state, { payload: msgArray }) => ({\n      ...state,\n      messages: [...state.messages, ...msgArray],\n    }),\n  },\n  initialState\n);\nexport default room;\n"]},"metadata":{},"sourceType":"module"}