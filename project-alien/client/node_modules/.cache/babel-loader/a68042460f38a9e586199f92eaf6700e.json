{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/Room/PlazaRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\nimport aquarium from \"../../../shared\";\nimport api from \"../../../apis\";\nimport SearchBox from \"../SearchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlazaRoom(props) {\n  _s();\n\n  const dispatch = useDispatch(); // 챌린지 정보 가져오기\n\n  const roomId = \"plaza\";\n  const room = aquarium.setCurrentRoom(roomId);\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/main\");\n        console.log(\"fetch main data\", res.data);\n\n        if (res.data.result === \"success\") {\n          // Canvas에 반영\n          console.log(\"plazaroom:\", roomId);\n          const aliens = res.data.aliens;\n          room.initMonsters(aliens);\n          room.start(); // redux에 저장\n\n          const roomTitle = `CHAL-IT`;\n          dispatch(actions.setRoom({\n            roomId,\n            aliens,\n            roomTitle\n          }));\n        } else {}\n      };\n\n      fetchData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n\n    return () => {\n      dispatch(actions.setRoom({\n        roomId: null,\n        aliens: []\n      }));\n      room.close();\n    }; //   }, []);\n  }, [room, roomId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PlazaRoom, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PlazaRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlazaRoom\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/Room/PlazaRoom.js"],"names":["React","useEffect","useDispatch","actions","aquarium","api","SearchBox","PlazaRoom","props","dispatch","roomId","room","setCurrentRoom","fetchData","res","get","console","log","data","result","aliens","initMonsters","start","roomTitle","setRoom","err","error","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CADuC,CAGvC;;AACA,QAAMQ,MAAM,GAAG,OAAf;AACA,QAAMC,IAAI,GAAGP,QAAQ,CAACQ,cAAT,CAAwBF,MAAxB,CAAb;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMY,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,OAAR,CAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,GAAG,CAACI,IAAnC;;AACA,YAAIJ,GAAG,CAACI,IAAJ,CAASC,MAAT,KAAoB,SAAxB,EAAmC;AACjC;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,MAA1B;AACA,gBAAMU,MAAM,GAAGN,GAAG,CAACI,IAAJ,CAASE,MAAxB;AACAT,UAAAA,IAAI,CAACU,YAAL,CAAkBD,MAAlB;AACAT,UAAAA,IAAI,CAACW,KAAL,GALiC,CAOjC;;AACA,gBAAMC,SAAS,GAAI,SAAnB;AACAd,UAAAA,QAAQ,CAACN,OAAO,CAACqB,OAAR,CAAgB;AAAEd,YAAAA,MAAF;AAAUU,YAAAA,MAAV;AAAkBG,YAAAA;AAAlB,WAAhB,CAAD,CAAR;AACD,SAVD,MAUO,CACN;AACF,OAfD;;AAgBAV,MAAAA,SAAS;AACV,KAlBD,CAkBE,OAAOY,GAAP,EAAY;AACZT,MAAAA,OAAO,CAACU,KAAR,CAAc,gBAAd,EAAgCD,GAAhC;AACD;;AACD,WAAO,MAAM;AACXhB,MAAAA,QAAQ,CAACN,OAAO,CAACqB,OAAR,CAAgB;AAAEd,QAAAA,MAAM,EAAE,IAAV;AAAgBU,QAAAA,MAAM,EAAE;AAAxB,OAAhB,CAAD,CAAR;AACAT,MAAAA,IAAI,CAACgB,KAAL;AACD,KAHD,CAtBc,CA0Bd;AACD,GA3BQ,EA2BN,CAAChB,IAAD,EAAOD,MAAP,EAAeD,QAAf,CA3BM,CAAT;AA6BA,sBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCuBF,S;UACLL,W;;;KADKK,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\n\nimport aquarium from \"../../../shared\";\nimport api from \"../../../apis\";\n\nimport SearchBox from \"../SearchBox\";\n\nexport default function PlazaRoom(props) {\n  const dispatch = useDispatch();\n\n  // 챌린지 정보 가져오기\n  const roomId = \"plaza\";\n  const room = aquarium.setCurrentRoom(roomId);\n\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/main\");\n        console.log(\"fetch main data\", res.data);\n        if (res.data.result === \"success\") {\n          // Canvas에 반영\n          console.log(\"plazaroom:\", roomId);\n          const aliens = res.data.aliens;\n          room.initMonsters(aliens);\n          room.start();\n\n          // redux에 저장\n          const roomTitle = `CHAL-IT`;\n          dispatch(actions.setRoom({ roomId, aliens, roomTitle }));\n        } else {\n        }\n      };\n      fetchData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n    return () => {\n      dispatch(actions.setRoom({ roomId: null, aliens: [] }));\n      room.close();\n    };\n    //   }, []);\n  }, [room, roomId, dispatch]);\n\n  return <SearchBox />;\n}\n"]},"metadata":{},"sourceType":"module"}