{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport HorizonLine from \"../components/HorizonLine\";\nimport * as api from \"../apis/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInModal = ({\n  show,\n  onHide,\n  setSignInModalOn,\n  setLoginStatus,\n  setSignInClicked\n}) => {\n  _s();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  console.log(signInClicked);\n  const [signInClicked, setSignInCliked] = useState(false);\n  let signInData = {\n    userEmail,\n    userPassword\n  };\n  console.log(\"signInData\", signInData);\n\n  const postSignIn = async () => {\n    const response = await api.post(\"/login_process\", signInData);\n    console.log(\"response\", response);\n    const data = await response.json();\n    console.log(\"data\", data);\n  };\n\n  useEffect(() => {\n    try {\n      postSignIn();\n    } catch (err) {\n      console.log(\"ERROR\", err);\n    }\n  }, []); // 로그인 버튼을 처음 눌렀을 때만 포스트 요청이 보내지도록 변경\n  // data가 userData와 일치하면 loginSuccess() 그렇지 않으면 loginFailure 실행\n\n  function signInSuccess() {\n    return () => {\n      setLoginStatus(true);\n      setSignInModalOn(false);\n    };\n  }\n\n  function signInFailure() {\n    return () => {// 로그인 실패 alert 창 또는 에러 메세지 띄우기\n      // \"이메일과 패스워드가 일치하지 않습니다.\"\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"helloalien@jungle.com\",\n              onChange: e => {\n                setUserEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"********\",\n              onChange: e => {\n                setUserPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"my-3\",\n            type: \"button\",\n            variant: \"success\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: () => {\n              setSignInClicked(true);\n              postSignIn();\n            },\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInModal, \"pCqwsZJCHnWQYaMBO1u3FL9Zr9I=\");\n\n_c = SignInModal;\nexport default SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js"],"names":["React","useState","useEffect","Button","Container","Form","Modal","HorizonLine","api","SignInModal","show","onHide","setSignInModalOn","setLoginStatus","setSignInClicked","userEmail","setUserEmail","userPassword","setUserPassword","console","log","signInClicked","setSignInCliked","signInData","postSignIn","response","post","data","json","err","signInSuccess","signInFailure","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport HorizonLine from \"../components/HorizonLine\";\nimport * as api from \"../apis/index.js\";\n\nconst SignInModal = ({\n  show,\n  onHide,\n  setSignInModalOn,\n  setLoginStatus,\n  setSignInClicked,\n}) => {\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  console.log(signInClicked);\n\n  const [signInClicked, setSignInCliked] = useState(false);\n  let signInData = { userEmail, userPassword };\n  console.log(\"signInData\", signInData);\n\n  const postSignIn = async () => {\n    const response = await api.post(\"/login_process\", signInData);\n    console.log(\"response\", response);\n    const data = await response.json();\n    console.log(\"data\", data);\n  };\n\n  useEffect(() => {\n    try {\n      postSignIn();\n    } catch (err) {\n      console.log(\"ERROR\", err);\n    }\n  }, []);\n\n  // 로그인 버튼을 처음 눌렀을 때만 포스트 요청이 보내지도록 변경\n  // data가 userData와 일치하면 loginSuccess() 그렇지 않으면 loginFailure 실행\n\n  function signInSuccess() {\n    return () => {\n      setLoginStatus(true);\n      setSignInModalOn(false);\n    };\n  }\n\n  function signInFailure() {\n    return () => {\n      // 로그인 실패 alert 창 또는 에러 메세지 띄우기\n      // \"이메일과 패스워드가 일치하지 않습니다.\"\n    };\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">로그인</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={() => {\n                setSignInClicked(true);\n                postSignIn();\n              }}\n            >\n              로그인\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default SignInModal;\n"]},"metadata":{},"sourceType":"module"}