{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport * as api from \"../apis/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInModal = ({\n  show,\n  onHide,\n  setSignInModalOn,\n  setLoginStatus\n}) => {\n  _s();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [signInClicked, setSignInClicked] = useState(false);\n  const [signInError, setSignInError] = useState(null);\n  const [signInMessage, setSignInMessage] = useState(null); // 로그인 성공시 true로 전환되는 임시 상태 변수\n\n  const [signInStatus, setSignInStatus] = useState(false);\n\n  function validateSignIn(userEmail, userPassword) {\n    if (userEmail !== \"\" & !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)) {\n      setSignInMessage(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      return false;\n    } // if (userPassword !== \"\") {\n    //   setSignInMessage(\"입력하신 이메일과 패스워드가 일치하지 않습니다.\");\n    //   return false;\n    // }\n\n\n    if (userEmail === \"\" || userPassword === \"\") {\n      setSignInMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    } // 임시로 설정\n\n\n    setSignInStatus(true);\n    console.log(\"signInStatus\", signInStatus);\n    setSignInMessage(null);\n    return true;\n  }\n\n  const postSignIn = async () => {\n    let signInData = {\n      email: userEmail,\n      pwd: userPassword\n    };\n    const response = await api.post(\"/user/login_process\", signInData);\n    console.log(\"response\", response); // const data = await response.json();\n    // console.log(\"data\", data);\n  };\n\n  console.log(\"signInClicked\", signInClicked);\n  useEffect(() => {\n    try {\n      setSignInError(null);\n      postSignIn(); // 회원정보 DB에서 관리하는 데이터가 signInData와 일치하면 signInSuccess() 그렇지 않으면 signInFailure() 실행\n      // ex) {signInResponse == \"success\" ? signInSuccess() : signInFailure()}\n\n      console.log(\"signInStatus\", signInStatus);\n\n      if (signInStatus === true) {\n        signInSuccess();\n        console.log(\"signInSuccess\", signInSuccess);\n      } else {\n        signInFailure();\n        console.log(\"signInFailure\", signInFailure);\n      }\n    } catch (err) {\n      setSignInError(err);\n      console.log(\"SIGN-IN ERROR\", signInError);\n    }\n  }, [signInClicked]);\n\n  function signInSuccess() {\n    return () => {\n      setSignInClicked(false);\n      setLoginStatus(true);\n      setSignInModalOn(false); // userNickname을 Header.js에 전달하여  \"{userNickname}님 환영합니다!\" 메세지 추가\n    };\n  }\n\n  function signInFailure() {\n    return () => {\n      setSignInClicked(false);\n    };\n  }\n\n  const onClick = event => {\n    event.preventDefault();\n    setSignInMessage(null);\n\n    if (validateSignIn(userEmail, userPassword) == true) {\n      setSignInClicked(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: styles.modal__form,\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        onClick: () => {\n          setUserEmail(\"\");\n          setUserPassword(\"\");\n          setSignInMessage(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form__signin,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: styles.form__input,\n              type: \"email\",\n              placeholder: \"helloalien@jungle.com\",\n              onChange: e => {\n                setUserEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"********\",\n              onChange: e => {\n                setUserPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: styles.form__signin__message,\n            children: [signInMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"my-3\",\n            type: \"button\",\n            variant: \"success\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: onClick,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInModal, \"XXO+KZNKoDm5yBG9Hu1KjUvBaYo=\");\n\n_c = SignInModal;\nexport default SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js"],"names":["React","useState","useEffect","Button","Container","Form","Modal","styles","api","SignInModal","show","onHide","setSignInModalOn","setLoginStatus","userEmail","setUserEmail","userPassword","setUserPassword","signInClicked","setSignInClicked","signInError","setSignInError","signInMessage","setSignInMessage","signInStatus","setSignInStatus","validateSignIn","test","console","log","postSignIn","signInData","email","pwd","response","post","signInSuccess","signInFailure","err","onClick","event","preventDefault","modal__form","container","form__signin","form__input","e","target","value","form__signin__message","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,KAAlC,QAA+C,iBAA/C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,gBAAhB;AAAkCC,EAAAA;AAAlC,CAAD,KAAwD;AAAA;;AAC1E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,IAAD,CAAlD,CAN0E,CAQ1E;;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASyB,cAAT,CAAwBZ,SAAxB,EAAmCE,YAAnC,EAAiD;AAC/C,QACGF,SAAS,KAAK,EAAf,GACA,CAAC,gDAAgDa,IAAhD,CAAqDb,SAArD,CAFH,EAGE;AACAS,MAAAA,gBAAgB,CAAC,yBAAD,CAAhB;AACA,aAAO,KAAP;AACD,KAP8C,CAS/C;AACA;AACA;AACA;;;AAEA,QAAIT,SAAS,KAAK,EAAd,IAAoBE,YAAY,KAAK,EAAzC,EAA6C;AAC3CO,MAAAA,gBAAgB,CAAC,qBAAD,CAAhB;AACA,aAAO,KAAP;AACD,KAjB8C,CAmB/C;;;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,YAA5B;AAEAD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,WAAO,IAAP;AACD;;AAED,QAAMO,UAAU,GAAG,YAAY;AAC7B,QAAIC,UAAU,GAAG;AAAEC,MAAAA,KAAK,EAAElB,SAAT;AAAoBmB,MAAAA,GAAG,EAAEjB;AAAzB,KAAjB;AACA,UAAMkB,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,IAAJ,CAAS,qBAAT,EAAgCJ,UAAhC,CAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,QAAxB,EAH6B,CAI7B;AACA;AACD,GAND;;AAQAN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,aAA7B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFmB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAS,MAAAA,UAAU,GAFR,CAGF;AACA;;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,YAA5B;;AACA,UAAIA,YAAY,KAAK,IAArB,EAA2B;AACzBY,QAAAA,aAAa;AACbR,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,aAA7B;AACD,OAHD,MAGO;AACLC,QAAAA,aAAa;AACbT,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BQ,aAA7B;AACD;AACF,KAbD,CAaE,OAAOC,GAAP,EAAY;AACZjB,MAAAA,cAAc,CAACiB,GAAD,CAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,WAA7B;AACD;AACF,GAlBQ,EAkBN,CAACF,aAAD,CAlBM,CAAT;;AAoBA,WAASkB,aAAT,GAAyB;AACvB,WAAO,MAAM;AACXjB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAN,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAD,MAAAA,gBAAgB,CAAC,KAAD,CAAhB,CAHW,CAIX;AACD,KALD;AAMD;;AAED,WAASyB,aAAT,GAAyB;AACvB,WAAO,MAAM;AACXlB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAFD;AAGD;;AAED,QAAMoB,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAlB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAIG,cAAc,CAACZ,SAAD,EAAYE,YAAZ,CAAd,IAA2C,IAA/C,EAAqD;AACnDG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GAND;;AAQA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAEZ,MAAM,CAACmC,WADpB;AAEE,IAAA,IAAI,EAAEhC,IAFR;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,uBAAgB,+BAJlB;AAKE,IAAA,QAAQ,MALV;AAAA,2BAOE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEJ,MAAM,CAACoC,SAA7B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AACE,QAAA,WAAW,MADb;AAEE,QAAA,OAAO,EAAE,MAAM;AACb5B,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAM,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,SANH;AAAA,+BAQE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEhB,MAAM,CAACqC,YAAxB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAErC,MAAM,CAACsC,WADpB;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,WAAW,EAAC,uBAHd;AAIE,cAAA,QAAQ,EAAGC,CAAD,IAAO;AACf/B,gBAAAA,YAAY,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD;AANH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,QAAQ,EAAGF,CAAD,IAAO;AACf7B,gBAAAA,eAAe,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD;AALH;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eA0BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAEzC,MAAM,CAAC0C,qBAA9B;AAAA,uBACG3B,aADH,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eA+BE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAC,SAHV;AAIE,YAAA,KAAK,EAAE;AACL4B,cAAAA,KAAK,EAAE;AADF,aAJT;AAOE,YAAA,OAAO,EAAEX,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA9JD;;GAAM9B,W;;KAAAA,W;AAgKN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport * as api from \"../apis/index.js\";\n\nconst SignInModal = ({ show, onHide, setSignInModalOn, setLoginStatus }) => {\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const [signInClicked, setSignInClicked] = useState(false);\n  const [signInError, setSignInError] = useState(null);\n  const [signInMessage, setSignInMessage] = useState(null);\n\n  // 로그인 성공시 true로 전환되는 임시 상태 변수\n  const [signInStatus, setSignInStatus] = useState(false);\n\n  function validateSignIn(userEmail, userPassword) {\n    if (\n      (userEmail !== \"\") &\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)\n    ) {\n      setSignInMessage(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n\n    // if (userPassword !== \"\") {\n    //   setSignInMessage(\"입력하신 이메일과 패스워드가 일치하지 않습니다.\");\n    //   return false;\n    // }\n\n    if (userEmail === \"\" || userPassword === \"\") {\n      setSignInMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    }\n\n    // 임시로 설정\n    setSignInStatus(true);\n    console.log(\"signInStatus\", signInStatus);\n\n    setSignInMessage(null);\n    return true;\n  }\n\n  const postSignIn = async () => {\n    let signInData = { email: userEmail, pwd: userPassword };\n    const response = await api.post(\"/user/login_process\", signInData);\n    console.log(\"response\", response);\n    // const data = await response.json();\n    // console.log(\"data\", data);\n  };\n\n  console.log(\"signInClicked\", signInClicked);\n\n  useEffect(() => {\n    try {\n      setSignInError(null);\n      postSignIn();\n      // 회원정보 DB에서 관리하는 데이터가 signInData와 일치하면 signInSuccess() 그렇지 않으면 signInFailure() 실행\n      // ex) {signInResponse == \"success\" ? signInSuccess() : signInFailure()}\n      console.log(\"signInStatus\", signInStatus);\n      if (signInStatus === true) {\n        signInSuccess();\n        console.log(\"signInSuccess\", signInSuccess);\n      } else {\n        signInFailure();\n        console.log(\"signInFailure\", signInFailure);\n      }\n    } catch (err) {\n      setSignInError(err);\n      console.log(\"SIGN-IN ERROR\", signInError);\n    }\n  }, [signInClicked]);\n\n  function signInSuccess() {\n    return () => {\n      setSignInClicked(false);\n      setLoginStatus(true);\n      setSignInModalOn(false);\n      // userNickname을 Header.js에 전달하여  \"{userNickname}님 환영합니다!\" 메세지 추가\n    };\n  }\n\n  function signInFailure() {\n    return () => {\n      setSignInClicked(false);\n    };\n  }\n\n  const onClick = (event) => {\n    event.preventDefault();\n    setSignInMessage(null);\n    if (validateSignIn(userEmail, userPassword) == true) {\n      setSignInClicked(true);\n    }\n  };\n\n  return (\n    <Modal\n      className={styles.modal__form}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container className={styles.container}>\n        <Modal.Header\n          closeButton\n          onClick={() => {\n            setUserEmail(\"\");\n            setUserPassword(\"\");\n            setSignInMessage(null);\n          }}\n        >\n          <Modal.Title id=\"contained-modal-title-vcenter\">로그인</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className={styles.form__signin}>\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                className={styles.form__input}\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group className={styles.form__signin__message}>\n              {signInMessage}\n              <br />\n            </Form.Group>\n\n            <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={onClick}\n            >\n              로그인\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default SignInModal;\n"]},"metadata":{},"sourceType":"module"}