{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/NewAlien/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../Redux/actions\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport api from \"../../apis\";\nimport AlienSlide from \"./AlienSlide\";\nimport AlienInfo from \"./AlienInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewAlien(props) {\n  _s();\n\n  const {\n    challengeId\n  } = useParams();\n  const {\n    user\n  } = useSelector(({\n    user\n  }) => ({\n    user: user.user\n  })); // console.log(\"New Challenge params\", params);\n\n  const [authCount, setAuthCount] = useState(\"\"); // 생명체 정보\n\n  const [alienName, setAlienName] = useState(\"\");\n  const [alienNumber, setAlienNumber] = useState(0); // 인증 요일\n\n  const [checkDay, setCheckDay] = useState([]); // validation\n\n  const [creAlienMessage, setCreAlienMessage] = useState(null); // 링크 이동\n\n  const navigate = useNavigate(); // 팝업\n\n  const dispatch = useDispatch(); // 기본 생명체 번호 계산\n\n  let aNumber = alienNumber;\n\n  if (aNumber >= 0) {\n    aNumber = aNumber % 8;\n\n    while (aNumber < 0) {\n      aNumber += 8;\n    }\n  } else {\n    aNumber %= 8;\n\n    while (aNumber < 0) {\n      aNumber += 8;\n    }\n\n    if (aNumber === -0) {\n      aNumber = 0;\n    }\n  }\n\n  useEffect(() => {\n    // cntOfWeek\n    try {\n      const getChalData = async () => {\n        // 본 챌린지에 참가중인지 확인\n        let participating;\n\n        if (user.login && user.challenges) {\n          participating = user.challenges.findIndex(c => c.id === Number(challengeId)) !== -1;\n        }\n\n        if (!user.login || participating) return;\n        let res = await api.get(`/challenge/totalAuthCnt/${challengeId}`);\n\n        if (res.data.result === \"success\") {\n          setAuthCount(res.data.times_per_week);\n        } else {// TODO: error handling 필요한가?\n        }\n      };\n\n      getChalData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n  }, [challengeId, user.login, user.challenges]); // validation\n\n  function validateCreAlien(alienName, checkDay, authCount) {\n    if (!alienName) {\n      setCreAlienMessage(\"생명체 이름을 지어주세요!\");\n      return false;\n    }\n\n    if (!checkDay.length) {\n      setCreAlienMessage(\"인증 요일을 선택해주세요!\");\n      return false;\n    }\n\n    if (checkDay.length !== authCount) {\n      setCreAlienMessage(\"인증 횟수를 확인해주세요!\");\n      return false;\n    }\n\n    setCreAlienMessage(null);\n    return true;\n  } // 생명체 생성 event\n\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    // validation check\n    if (!validateCreAlien(alienName, checkDay, authCount)) return;\n    postCreateAlien();\n  }; // Alien 정보 api 보내기\n\n\n  const postCreateAlien = async () => {\n    let createAlienData = {\n      challenge_id: challengeId,\n      alien_name: alienName,\n      image_url: aNumber,\n      times_per_week: authCount,\n      sun: Number(checkDay.includes(\"sun\")),\n      mon: Number(checkDay.includes(\"mon\")),\n      tue: Number(checkDay.includes(\"tue\")),\n      wed: Number(checkDay.includes(\"wed\")),\n      thu: Number(checkDay.includes(\"thu\")),\n      fri: Number(checkDay.includes(\"fri\")),\n      sat: Number(checkDay.includes(\"sat\"))\n    };\n    const response = await api.post(\"/alien/create\", createAlienData); // console.log(\"res\", response);\n\n    if (response.data.result === \"access_deny_full\") {\n      // 1) 종류 2) 메세지 문구 3) SUCC or FAIL에 따른 아이콘 변경 4) callback함수(사실 여기선 별 효과 없음)\n      dispatch(actions.setPopupModal(\"CREATE_ALIEN\", \"방의 정원이 가득 찼습니다 !\", \"FAIL\", () => {\n        navigate(`/challenge/${challengeId}/room`);\n      }));\n      return;\n    }\n\n    if (response.data.result === \"fail_already_participant\") {\n      dispatch(actions.setPopupModal(\"CREATE_ALIEN\", \"이미 참가중인 챌린지입니다 !\", \"FAIL\", () => {\n        navigate(`/challenge/${challengeId}/room`);\n      }));\n      return;\n    }\n\n    dispatch(actions.setPopupModal(\"CREATE_ALIEN\", \"생명체가 생성되었습니다 !\", \"SUCC\", () => {\n      navigate(`/challenge/${challengeId}/room`);\n    }));\n    dispatch(actions.joinChallenge({\n      id: parseInt(challengeId)\n    }));\n  }; // console.log(\"checkDay\", checkDay);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container w-2/5 min-w-max\",\n      children: [/*#__PURE__*/_jsxDEV(AlienInfo, {\n        setAlienName: setAlienName,\n        authCount: authCount,\n        checkDay: checkDay,\n        setCheckDay: setCheckDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container top-60 border-gray-500 w-1/2 px-3 py-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"relative px-1 py-1 inline-flex min-w-max\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \" mr-1 inline-block \",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bg-white inline-block border-l border-t border-r rounded-t py-2 px-4 text-blue-700 font-semibold\",\n              children: \"\\uCE90\\uB9AD\\uD130 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-5 md:p-10 w-full min-w-max\",\n          children: /*#__PURE__*/_jsxDEV(AlienSlide, {\n            alienNumber: alienNumber,\n            setAlienNumber: setAlienNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-3 px-3 text-red-500 font-semibold text-center\",\n        children: creAlienMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border py-1 px-3 rounded-lg shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 text-font-semibold\",\n          onClick: handleSubmit,\n          children: \"\\uC0DD\\uBA85\\uCCB4 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewAlien, \"3F26uD6N9y0CjFaNWrltWgS73eI=\", false, function () {\n  return [useParams, useSelector, useNavigate, useDispatch];\n});\n\n_c = NewAlien;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewAlien\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/NewAlien/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","actions","useNavigate","useParams","styles","api","AlienSlide","AlienInfo","NewAlien","props","challengeId","user","authCount","setAuthCount","alienName","setAlienName","alienNumber","setAlienNumber","checkDay","setCheckDay","creAlienMessage","setCreAlienMessage","navigate","dispatch","aNumber","getChalData","participating","login","challenges","findIndex","c","id","Number","res","get","data","result","times_per_week","err","console","error","validateCreAlien","length","handleSubmit","e","postCreateAlien","createAlienData","challenge_id","alien_name","image_url","sun","includes","mon","tue","wed","thu","fri","sat","response","post","setPopupModal","joinChallenge","parseInt","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../Redux/actions\";\nimport { useNavigate } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport api from \"../../apis\";\nimport AlienSlide from \"./AlienSlide\";\nimport AlienInfo from \"./AlienInfo\";\n\nexport default function NewAlien(props) {\n  const { challengeId } = useParams();\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  // console.log(\"New Challenge params\", params);\n  const [authCount, setAuthCount] = useState(\"\");\n  // 생명체 정보\n  const [alienName, setAlienName] = useState(\"\");\n  const [alienNumber, setAlienNumber] = useState(0);\n  // 인증 요일\n  const [checkDay, setCheckDay] = useState([]);\n\n  // validation\n  const [creAlienMessage, setCreAlienMessage] = useState(null);\n  // 링크 이동\n  const navigate = useNavigate();\n  // 팝업\n  const dispatch = useDispatch();\n\n  // 기본 생명체 번호 계산\n  let aNumber = alienNumber;\n  if (aNumber >= 0) {\n    aNumber = aNumber % 8;\n    while (aNumber < 0) {\n      aNumber += 8;\n    }\n  } else {\n    aNumber %= 8;\n    while (aNumber < 0) {\n      aNumber += 8;\n    }\n    if (aNumber === -0) {\n      aNumber = 0;\n    }\n  }\n\n  useEffect(() => {\n    // cntOfWeek\n    try {\n      const getChalData = async () => {\n        // 본 챌린지에 참가중인지 확인\n        let participating;\n        if (user.login && user.challenges) {\n          participating =\n            user.challenges.findIndex((c) => c.id === Number(challengeId)) !==\n            -1;\n        }\n        if (!user.login || participating) return;\n        let res = await api.get(`/challenge/totalAuthCnt/${challengeId}`);\n        if (res.data.result === \"success\") {\n          setAuthCount(res.data.times_per_week);\n        } else {\n          // TODO: error handling 필요한가?\n        }\n      };\n      getChalData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n  }, [challengeId, user.login, user.challenges]);\n\n  // validation\n  function validateCreAlien(alienName, checkDay, authCount) {\n    if (!alienName) {\n      setCreAlienMessage(\"생명체 이름을 지어주세요!\");\n      return false;\n    }\n    if (!checkDay.length) {\n      setCreAlienMessage(\"인증 요일을 선택해주세요!\");\n      return false;\n    }\n    if (checkDay.length !== authCount) {\n      setCreAlienMessage(\"인증 횟수를 확인해주세요!\");\n      return false;\n    }\n    setCreAlienMessage(null);\n    return true;\n  }\n  // 생명체 생성 event\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n    // validation check\n    if (!validateCreAlien(alienName, checkDay, authCount)) return;\n    postCreateAlien();\n  };\n  // Alien 정보 api 보내기\n  const postCreateAlien = async () => {\n    let createAlienData = {\n      challenge_id: challengeId,\n      alien_name: alienName,\n      image_url: aNumber,\n      times_per_week: authCount,\n      sun: Number(checkDay.includes(\"sun\")),\n      mon: Number(checkDay.includes(\"mon\")),\n      tue: Number(checkDay.includes(\"tue\")),\n      wed: Number(checkDay.includes(\"wed\")),\n      thu: Number(checkDay.includes(\"thu\")),\n      fri: Number(checkDay.includes(\"fri\")),\n      sat: Number(checkDay.includes(\"sat\")),\n    };\n\n    const response = await api.post(\"/alien/create\", createAlienData);\n    // console.log(\"res\", response);\n    if (response.data.result === \"access_deny_full\") {\n      // 1) 종류 2) 메세지 문구 3) SUCC or FAIL에 따른 아이콘 변경 4) callback함수(사실 여기선 별 효과 없음)\n      dispatch(\n        actions.setPopupModal(\n          \"CREATE_ALIEN\",\n          \"방의 정원이 가득 찼습니다 !\",\n          \"FAIL\",\n          () => {\n            navigate(`/challenge/${challengeId}/room`);\n          }\n        )\n      );\n      return;\n    }\n\n    if (response.data.result === \"fail_already_participant\") {\n      dispatch(\n        actions.setPopupModal(\n          \"CREATE_ALIEN\",\n          \"이미 참가중인 챌린지입니다 !\",\n          \"FAIL\",\n          () => {\n            navigate(`/challenge/${challengeId}/room`);\n          }\n        )\n      );\n      return;\n    }\n\n    dispatch(\n      actions.setPopupModal(\n        \"CREATE_ALIEN\",\n        \"생명체가 생성되었습니다 !\",\n        \"SUCC\",\n        () => {\n          navigate(`/challenge/${challengeId}/room`);\n        }\n      )\n    );\n    dispatch(actions.joinChallenge({ id: parseInt(challengeId) }));\n  };\n\n  // console.log(\"checkDay\", checkDay);\n  return (\n    <div className={styles.body}>\n      <div className=\"container w-2/5 min-w-max\">\n        <AlienInfo\n          setAlienName={setAlienName}\n          authCount={authCount}\n          checkDay={checkDay}\n          setCheckDay={setCheckDay}\n        />\n\n        <div className=\" container top-60 border-gray-500 w-1/2 px-3 py-3 mb-3\">\n          <ul className=\"relative px-1 py-1 inline-flex min-w-max\">\n            <li className=\" mr-1 inline-block \">\n              <p className=\"bg-white inline-block border-l border-t border-r rounded-t py-2 px-4 text-blue-700 font-semibold\">\n                캐릭터 선택\n              </p>\n            </li>\n            {/* <li className=\"mr-1 inline-block\">\n              <a className=\"bg-white inline-block py-2 px-4 text-blue-500  font-semibold\">\n                꾸미기\n              </a>\n            </li> */}\n          </ul>\n          <div className=\"border p-5 md:p-10 w-full min-w-max\">\n            <AlienSlide\n              alienNumber={alienNumber}\n              setAlienNumber={setAlienNumber}\n            />\n          </div>\n        </div>\n        <div className=\"pb-3 px-3 text-red-500 font-semibold text-center\">\n          {creAlienMessage}\n        </div>\n        <div className=\"flex justify-center pb-5\">\n          <button\n            className=\"border py-1 px-3 rounded-lg shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 text-font-semibold\"\n            onClick={handleSubmit}\n          >\n            생명체 생성\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}