{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignUpModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./SignInModal.css\";\nimport styles from \"./SignUpModal.module.css\";\nimport api from \"../apis/index.js\";\nimport * as actions from \"../Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpModal = ({}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const showSignUpModal = useSelector(state => state.modalOnOff.showSignUpModal);\n  const [userNickname, setUserNickname] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userConfirm, setUserConfirm] = useState(\"\");\n  const [signUpClicked, setSignUpClicked] = useState(false);\n  const [signUpMessage, setSignUpMessage] = useState(null);\n\n  function validateSignUp(userNickname, userEmail, userPassword, userConfirm) {\n    if (userEmail !== \"\" & !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)) {\n      setSignUpMessage(\"이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n\n    if (userNickname.length > 20) {\n      setSignUpMessage(\"닉네임은 최대 20글자 이하여야 합니다.\");\n      return false;\n    }\n\n    if (userPassword !== userConfirm) {\n      setSignUpMessage(\"패스워드가 일치하지 않습니다.\");\n      return false;\n    }\n\n    if (userNickname === \"\" || userEmail === \"\" || userPassword === \"\" || userConfirm === \"\") {\n      setSignUpMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    }\n\n    setSignUpMessage(null);\n    return true;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSignUpMessage(null);\n    if (!validateSignUp(userNickname, userEmail, userPassword, userConfirm)) return;\n    setSignUpMessage(null);\n    setSignUpClicked(true);\n    postSignUp();\n  };\n\n  const postSignUp = async () => {\n    let signUpData = {\n      userNickname,\n      userEmail,\n      userPassword,\n      userConfirm\n    };\n    const res = await api.post(\"/user/register\", signUpData);\n    console.log(\"res\", res);\n\n    if (res.data.result === \"success\") {\n      // TODO: Redux 처리\n      alert(\"회원가입에 성공하였습니다.\");\n      setSignUpClicked(false); // setSignUpModalOn(false);\n    } else {\n      if (res.data.result === \"fail\") {\n        setSignUpMessage(\"이미 존재하는 이메일 주소입니다.\");\n        setSignUpClicked(false);\n      } else {\n        setSignUpMessage(\"이미 존재하는 닉네임입니다.\");\n        setSignUpClicked(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"flex flex-col max-w-md px-4 py-8 bg-white rounded-lg shadow dark:bg-gray-800 sm:px-6 md:px-8 lg:px-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"self-center mb-2 text-xl font-light text-gray-800 sm:text-2xl dark:text-white\",\n      children: \"Create a new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"justify-center text-sm text-center text-gray-500 flex-items-center dark:text-gray-400\",\n      children: [\"Already have an account ?\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        target: \"_blank\",\n        class: \"text-sm text-blue-500 underline hover:text-blue-700\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"p-6 mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex flex-col mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \" relative \",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"create-account-pseudo\",\n              class: \" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\",\n              name: \"pseudo\",\n              placeholder: \"Pseudo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex gap-4 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \" relative \",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"create-account-first-name\",\n              class: \" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\",\n              name: \"First name\",\n              placeholder: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \" relative \",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"create-account-last-name\",\n              class: \" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\",\n              name: \"Last name\",\n              placeholder: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex flex-col mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \" relative \",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"create-account-email\",\n              class: \" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex w-full my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"py-2 px-4  bg-purple-600 hover:bg-purple-700 focus:ring-purple-500 focus:ring-offset-purple-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpModal, \"IAadqheriU2NGBQLk/B//x7ZFAw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SignUpModal;\nexport default SignUpModal;\n{\n  /* <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container>\n        <Modal.Header\n          closeButton\n          onClick={() => {\n            setUserNickname(\"\");\n            setUserEmail(\"\");\n            setUserPassword(\"\");\n            setUserConfirm(\"\");\n            setSignUpMessage(null);\n          }}\n        >\n          <Modal.Title id=\"contained-modal-title-vcenter\">회원가입</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>닉네임</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"이재열\"\n                onChange={(e) => {\n                  setUserNickname(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n             <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n             <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n             <Form.Group>\n              <Form.Label>패스워드 확인</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserConfirm(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n             <Form.Group className={styles.form__signup__message}>\n              {signUpMessage}\n              <br />\n            </Form.Group>\n             <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={handleSubmit}\n            >\n              회원가입\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  ); */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignUpModal.js"],"names":["React","useState","useDispatch","useSelector","styles","api","actions","SignUpModal","dispatch","showSignUpModal","state","modalOnOff","userNickname","setUserNickname","userEmail","setUserEmail","userPassword","setUserPassword","userConfirm","setUserConfirm","signUpClicked","setSignUpClicked","signUpMessage","setSignUpMessage","validateSignUp","test","length","handleSubmit","e","preventDefault","postSignUp","signUpData","res","post","console","log","data","result","alert"],"mappings":"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A;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhCF,eA0CE;AAAK,UAAA,KAAK,EAAC,kBAAX;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,kQAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED,CAnJD;;GAAMd,W;UACaL,W,EACOC,W;;;KAFpBI,W;AAqJN,eAAeA,WAAf;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMC","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./SignInModal.css\";\nimport styles from \"./SignUpModal.module.css\";\nimport api from \"../apis/index.js\";\nimport * as actions from \"../Redux/actions\";\n\nconst SignUpModal = ({}) => {\n  const dispatch = useDispatch();\n  const showSignUpModal = useSelector(\n    (state) => state.modalOnOff.showSignUpModal\n  );\n\n  const [userNickname, setUserNickname] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userConfirm, setUserConfirm] = useState(\"\");\n\n  const [signUpClicked, setSignUpClicked] = useState(false);\n  const [signUpMessage, setSignUpMessage] = useState(null);\n\n  function validateSignUp(userNickname, userEmail, userPassword, userConfirm) {\n    if (\n      (userEmail !== \"\") &\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userEmail)\n    ) {\n      setSignUpMessage(\"이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n\n    if (userNickname.length > 20) {\n      setSignUpMessage(\"닉네임은 최대 20글자 이하여야 합니다.\");\n      return false;\n    }\n\n    if (userPassword !== userConfirm) {\n      setSignUpMessage(\"패스워드가 일치하지 않습니다.\");\n      return false;\n    }\n\n    if (\n      userNickname === \"\" ||\n      userEmail === \"\" ||\n      userPassword === \"\" ||\n      userConfirm === \"\"\n    ) {\n      setSignUpMessage(\"입력하지 않은 회원정보가 있습니다.\");\n      return false;\n    }\n\n    setSignUpMessage(null);\n    return true;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSignUpMessage(null);\n    if (!validateSignUp(userNickname, userEmail, userPassword, userConfirm))\n      return;\n    setSignUpMessage(null);\n    setSignUpClicked(true);\n    postSignUp();\n  };\n\n  const postSignUp = async () => {\n    let signUpData = { userNickname, userEmail, userPassword, userConfirm };\n    const res = await api.post(\"/user/register\", signUpData);\n    console.log(\"res\", res);\n    if (res.data.result === \"success\") {\n      // TODO: Redux 처리\n      alert(\"회원가입에 성공하였습니다.\");\n      setSignUpClicked(false);\n      // setSignUpModalOn(false);\n    } else {\n      if (res.data.result === \"fail\") {\n        setSignUpMessage(\"이미 존재하는 이메일 주소입니다.\");\n        setSignUpClicked(false);\n      } else {\n        setSignUpMessage(\"이미 존재하는 닉네임입니다.\");\n        setSignUpClicked(false);\n      }\n    }\n  };\n\n  return (\n    <div class=\"flex flex-col max-w-md px-4 py-8 bg-white rounded-lg shadow dark:bg-gray-800 sm:px-6 md:px-8 lg:px-10\">\n      <div class=\"self-center mb-2 text-xl font-light text-gray-800 sm:text-2xl dark:text-white\">\n        Create a new account\n      </div>\n      <span class=\"justify-center text-sm text-center text-gray-500 flex-items-center dark:text-gray-400\">\n        Already have an account ?\n        <a\n          href=\"#\"\n          target=\"_blank\"\n          class=\"text-sm text-blue-500 underline hover:text-blue-700\"\n        >\n          Sign in\n        </a>\n      </span>\n      <div class=\"p-6 mt-8\">\n        <form action=\"#\">\n          <div class=\"flex flex-col mb-2\">\n            <div class=\" relative \">\n              <input\n                type=\"text\"\n                id=\"create-account-pseudo\"\n                class=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"pseudo\"\n                placeholder=\"Pseudo\"\n              />\n            </div>\n          </div>\n          <div class=\"flex gap-4 mb-2\">\n            <div class=\" relative \">\n              <input\n                type=\"text\"\n                id=\"create-account-first-name\"\n                class=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"First name\"\n                placeholder=\"First name\"\n              />\n            </div>\n            <div class=\" relative \">\n              <input\n                type=\"text\"\n                id=\"create-account-last-name\"\n                class=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                name=\"Last name\"\n                placeholder=\"Last name\"\n              />\n            </div>\n          </div>\n          <div class=\"flex flex-col mb-2\">\n            <div class=\" relative \">\n              <input\n                type=\"text\"\n                id=\"create-account-email\"\n                class=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                placeholder=\"Email\"\n              />\n            </div>\n          </div>\n          <div class=\"flex w-full my-4\">\n            <button\n              type=\"submit\"\n              class=\"py-2 px-4  bg-purple-600 hover:bg-purple-700 focus:ring-purple-500 focus:ring-offset-purple-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\n            >\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpModal;\n\n{\n  /* <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container>\n        <Modal.Header\n          closeButton\n          onClick={() => {\n            setUserNickname(\"\");\n            setUserEmail(\"\");\n            setUserPassword(\"\");\n            setUserConfirm(\"\");\n            setSignUpMessage(null);\n          }}\n        >\n          <Modal.Title id=\"contained-modal-title-vcenter\">회원가입</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>닉네임</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"이재열\"\n                onChange={(e) => {\n                  setUserNickname(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드 확인</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserConfirm(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group className={styles.form__signup__message}>\n              {signUpMessage}\n              <br />\n            </Form.Group>\n\n            <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={handleSubmit}\n            >\n              회원가입\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  ); */\n}\n"]},"metadata":{},"sourceType":"module"}