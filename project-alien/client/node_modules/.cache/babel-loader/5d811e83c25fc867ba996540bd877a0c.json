{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport FieldCtrl from \"./FieldCtrl\";\nimport ListCtrl from \"./ListCtrl\";\nimport AlienCtrl from \"./AlienCtrl\";\nimport MultiField from \"./MultiField\";\nimport styles from \"./index.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../Redux/actions/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiAquarium(props) {\n  _s();\n\n  const {\n    rooms\n  } = props; // redux에서 현재 roomId 받아오기\n\n  const dispatch = useDispatch();\n  const {\n    roomId,\n    selectedAlien\n  } = useSelector(({\n    room\n  }) => ({\n    roomId: room.roomId,\n    selectedAlien: room.selectedAlien\n  }));\n\n  const handleSelectAlien = alien => {\n    const room = rooms.current && rooms.current[roomId];\n    if (!room) return;\n    dispatch(actions.selectAlien(alien.monId));\n    room.camera.setChasingTarget(alien, () => {\n      dispatch(actions.selectAlien(null));\n    });\n  }; // console.log(\"[MultiAquarium]\", roomId, aliens);\n  // console.log(\"selectedAlien\", selectedAlien);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [/*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecAlienCtrl,\n      children: /*#__PURE__*/_jsxDEV(AlienCtrl, {\n        room: rooms.current && rooms.current[roomId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecListCtrl,\n      children: /*#__PURE__*/_jsxDEV(ListCtrl, {\n        room: rooms.current && rooms.current[roomId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecFieldCtrl,\n      children: /*#__PURE__*/_jsxDEV(FieldCtrl, {\n        room: rooms.current && rooms.current[roomId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecField,\n      children: /*#__PURE__*/_jsxDEV(MultiField, {\n        room: rooms.current && rooms.current[roomId],\n        selectedAlien: selectedAlien,\n        handleSelectAlien: handleSelectAlien\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiAquarium, \"zsqHtgLfvK7SZQXqOE0p49j4zJw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MultiAquarium;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiAquarium\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js"],"names":["React","Outlet","FieldCtrl","ListCtrl","AlienCtrl","MultiField","styles","useSelector","useDispatch","actions","MultiAquarium","props","rooms","dispatch","roomId","selectedAlien","room","handleSelectAlien","alien","current","selectAlien","monId","camera","setChasingTarget","body","SecAlienCtrl","SecListCtrl","SecFieldCtrl","SecField"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB,CAD2C,CAE3C;;AACA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BR,WAAW,CAAC,CAAC;AAAES,IAAAA;AAAF,GAAD,MAAe;AAC3DF,IAAAA,MAAM,EAAEE,IAAI,CAACF,MAD8C;AAE3DC,IAAAA,aAAa,EAAEC,IAAI,CAACD;AAFuC,GAAf,CAAD,CAA7C;;AAIA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAMF,IAAI,GAAGJ,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcL,MAAd,CAA9B;AACA,QAAI,CAACE,IAAL,EAAW;AACXH,IAAAA,QAAQ,CAACJ,OAAO,CAACW,WAAR,CAAoBF,KAAK,CAACG,KAA1B,CAAD,CAAR;AACAL,IAAAA,IAAI,CAACM,MAAL,CAAYC,gBAAZ,CAA6BL,KAA7B,EAAoC,MAAM;AACxCL,MAAAA,QAAQ,CAACJ,OAAO,CAACW,WAAR,CAAoB,IAApB,CAAD,CAAR;AACD,KAFD;AAGD,GAPD,CAR2C,CAiB3C;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACkB,IAAvB;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAElB,MAAM,CAACmB,YAA3B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEb,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcL,MAAd;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAS,MAAA,SAAS,EAAER,MAAM,CAACoB,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEd,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcL,MAAd;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAS,MAAA,SAAS,EAAER,MAAM,CAACqB,YAA3B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEf,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcL,MAAd;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAS,MAAA,SAAS,EAAER,MAAM,CAACsB,QAA3B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEhB,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcL,MAAd,CADzB;AAEE,QAAA,aAAa,EAAEC,aAFjB;AAGE,QAAA,iBAAiB,EAAEE;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCuBP,a;UAGLF,W,EACiBD,W;;;KAJZG,a","sourcesContent":["import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\nimport FieldCtrl from \"./FieldCtrl\";\nimport ListCtrl from \"./ListCtrl\";\nimport AlienCtrl from \"./AlienCtrl\";\nimport MultiField from \"./MultiField\";\nimport styles from \"./index.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../Redux/actions/index.js\";\n\nexport default function MultiAquarium(props) {\n  const { rooms } = props;\n  // redux에서 현재 roomId 받아오기\n  const dispatch = useDispatch();\n  const { roomId, selectedAlien } = useSelector(({ room }) => ({\n    roomId: room.roomId,\n    selectedAlien: room.selectedAlien,\n  }));\n  const handleSelectAlien = (alien) => {\n    const room = rooms.current && rooms.current[roomId];\n    if (!room) return;\n    dispatch(actions.selectAlien(alien.monId));\n    room.camera.setChasingTarget(alien, () => {\n      dispatch(actions.selectAlien(null));\n    });\n  };\n\n  // console.log(\"[MultiAquarium]\", roomId, aliens);\n  // console.log(\"selectedAlien\", selectedAlien);\n  return (\n    <div className={styles.body}>\n      <Outlet />\n      <section className={styles.SecAlienCtrl}>\n        <AlienCtrl room={rooms.current && rooms.current[roomId]} />\n      </section>\n      <section className={styles.SecListCtrl}>\n        <ListCtrl room={rooms.current && rooms.current[roomId]} />\n      </section>\n      <section className={styles.SecFieldCtrl}>\n        <FieldCtrl room={rooms.current && rooms.current[roomId]} />\n      </section>\n      <section className={styles.SecField}>\n        <MultiField\n          room={rooms.current && rooms.current[roomId]}\n          selectedAlien={selectedAlien}\n          handleSelectAlien={handleSelectAlien}\n        />\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}