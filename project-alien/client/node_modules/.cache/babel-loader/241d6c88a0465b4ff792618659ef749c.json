{"ast":null,"code":"class Camera {\n  constructor() {\n    this.getCanvasSize = size => {\n      // TODO: level과 ratio 범위 확정되면 계산 효율화\n      return size * (this.ratioMin + this.ratioRange * ((this.level - this.levelMin) / this.levelRange));\n    };\n\n    this.getLocalFromMouse = coord => {\n      // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n      console.log(\"TODO getLocalFromMouse\", coord);\n      return coord;\n    };\n\n    this.getEventLocation = e => {\n      // TODO: integrate with setMouseLocal\n      let x, y;\n\n      if (e.touches && e.touches.length === 1) {\n        x = e.touches[0].clientX;\n        y = e.touches[0].clientY;\n      } else {\n        x = e.clientX;\n        y = e.clientY;\n      }\n\n      return {\n        x,\n        y\n      };\n    };\n\n    this.resetEveryFrame = () => {\n      this.isClicked = false;\n    };\n\n    this.onMouseDown = e => {\n      // console.log(\"camera onMouseDown\");\n      e.preventDefault();\n      let evtLocal = this.getEventLocation(e);\n      this.isMouseDown = true;\n      this.isDragging = false;\n      this.dragFrom.x = evtLocal.x;\n      this.dragFrom.y = evtLocal.y;\n      this.centerFrom.x = this.center.x;\n      this.centerFrom.y = this.center.y;\n    };\n\n    this.onMouseMove = e => {\n      // console.log(\"camera onMouseMove\", this.isDragging);\n      if (!this.isMouseDown) return;\n      let evtLocal = this.getEventLocation(e);\n      let pxLimit = 2;\n\n      if (Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit || Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit) {\n        this.isDragging = true;\n      }\n\n      if (this.isDragging) {\n        let x = this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n        let y = this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n        this.setCenter(x, y);\n      }\n    };\n\n    this.onMouseUp = e => {\n      // console.log(\"camera onMouseUp\");\n      if (this.isMouseDown && !this.isDragging) {\n        this.isClicked = true;\n      }\n\n      this.isMouseDown = false;\n      this.isDragging = false;\n    };\n\n    this.onTouchStart = e => this.handleTouch(e, this.onMouseDown);\n\n    this.onTouchMove = e => this.handleTouch(e, this.onMouseMove);\n\n    this.onTouchEnd = e => this.handleTouch(e, this.onMouseUp);\n\n    this.onWheel = e => {\n      console.log(\"camera onWheel\");\n    };\n\n    this.onResize = (cvsWidth, cvsHeight) => {\n      this.cvsWidth = cvsWidth;\n      this.cvsHeight = cvsHeight; // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n    };\n\n    this.handleTouch = (e, singleTouchHandler) => {\n      if (e.touches.length <= 1) {\n        singleTouchHandler(e);\n      } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n        this.isDragging = false; // TODO\n        // this.handlePinch(e);\n      }\n    };\n\n    this.origin = {\n      x: 0,\n      y: 0\n    };\n    this.center = {\n      x: 0,\n      y: 0\n    };\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = this.levelDefault;\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragFrom = {\n      x: 0,\n      y: 0\n    };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(this.levelMax, Math.round(this.level + this.levelStep)); // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(this.levelMin, Math.round(this.level - this.levelStep)); // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/Room/Camera.js"],"names":["Camera","constructor","getCanvasSize","size","ratioMin","ratioRange","level","levelMin","levelRange","getLocalFromMouse","coord","console","log","getEventLocation","e","x","y","touches","length","clientX","clientY","resetEveryFrame","isClicked","onMouseDown","preventDefault","evtLocal","isMouseDown","isDragging","dragFrom","centerFrom","center","onMouseMove","pxLimit","Math","abs","dragRatio","setCenter","onMouseUp","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onWheel","onResize","cvsWidth","cvsHeight","singleTouchHandler","type","origin","undefined","levelDefault","levelStep","levelMax","ratioMax","initPinchDist","setLevel","zoomIn","min","round","zoomOut","max"],"mappings":"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","sourcesContent":["class Camera {\n  constructor() {\n    this.origin = { x: 0, y: 0 };\n    this.center = { x: 0, y: 0 };\n\n    this.cvsWidth = undefined;\n    this.cvsHeight = undefined;\n\n    this.levelDefault = 10;\n    this.levelStep = 1;\n    this.levelMax = 20;\n    this.levelMin = 1;\n    this.levelRange = this.levelMax - this.levelMin;\n    this.level = this.levelDefault;\n    this.ratioMax = 2;\n    this.ratioMin = 0.5;\n    this.ratioRange = this.ratioMax - this.ratioMin;\n\n    this.isClicked = false;\n    this.isDragging = false;\n    this.centerFrom = { x: 0, y: 0 };\n    this.dragFrom = { x: 0, y: 0 };\n    this.dragRatio = 0.6;\n    this.initPinchDist = null;\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  zoomIn() {\n    this.level = Math.min(\n      this.levelMax,\n      Math.round(this.level + this.levelStep)\n    );\n    // console.log(\"Camera ZoomIn\", this.level);\n  }\n\n  zoomOut() {\n    this.level = Math.max(\n      this.levelMin,\n      Math.round(this.level - this.levelStep)\n    );\n    // console.log(\"Camera ZoomOut\", this.level);\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  getCanvasSize = (size) => {\n    // TODO: level과 ratio 범위 확정되면 계산 효율화\n    return (\n      size *\n      (this.ratioMin +\n        this.ratioRange * ((this.level - this.levelMin) / this.levelRange))\n    );\n  };\n\n  getLocalFromMouse = (coord) => {\n    // TODO: camera center와 level을 고려해 field 상의 좌표 계산\n    console.log(\"TODO getLocalFromMouse\", coord);\n    return coord;\n  };\n\n  getEventLocation = (e) => {\n    // TODO: integrate with setMouseLocal\n    let x, y;\n    if (e.touches && e.touches.length === 1) {\n      x = e.touches[0].clientX;\n      y = e.touches[0].clientY;\n    } else {\n      x = e.clientX;\n      y = e.clientY;\n    }\n    return { x, y };\n  };\n\n  resetEveryFrame = () => {\n    this.isClicked = false;\n  };\n\n  onMouseDown = (e) => {\n    // console.log(\"camera onMouseDown\");\n    e.preventDefault();\n    let evtLocal = this.getEventLocation(e);\n    this.isMouseDown = true;\n    this.isDragging = false;\n    this.dragFrom.x = evtLocal.x;\n    this.dragFrom.y = evtLocal.y;\n    this.centerFrom.x = this.center.x;\n    this.centerFrom.y = this.center.y;\n  };\n\n  onMouseMove = (e) => {\n    // console.log(\"camera onMouseMove\", this.isDragging);\n    if (!this.isMouseDown) return;\n    let evtLocal = this.getEventLocation(e);\n    let pxLimit = 2;\n    if (\n      Math.abs(this.dragFrom.x - evtLocal.x) > pxLimit ||\n      Math.abs(this.dragFrom.y - evtLocal.y) > pxLimit\n    ) {\n      this.isDragging = true;\n    }\n\n    if (this.isDragging) {\n      let x =\n        this.centerFrom.x - (evtLocal.x - this.dragFrom.x) * this.dragRatio;\n      let y =\n        this.centerFrom.y - (evtLocal.y - this.dragFrom.y) * this.dragRatio;\n      this.setCenter(x, y);\n    }\n  };\n\n  onMouseUp = (e) => {\n    // console.log(\"camera onMouseUp\");\n    if (this.isMouseDown && !this.isDragging) {\n      this.isClicked = true;\n    }\n    this.isMouseDown = false;\n    this.isDragging = false;\n  };\n\n  onTouchStart = (e) => this.handleTouch(e, this.onMouseDown);\n  onTouchMove = (e) => this.handleTouch(e, this.onMouseMove);\n  onTouchEnd = (e) => this.handleTouch(e, this.onMouseUp);\n\n  onWheel = (e) => {\n    console.log(\"camera onWheel\");\n  };\n\n  onResize = (cvsWidth, cvsHeight) => {\n    this.cvsWidth = cvsWidth;\n    this.cvsHeight = cvsHeight;\n    // console.log(\"camera onResize\", this.cvsWidth, this.cvsHeight);\n  };\n\n  handleTouch = (e, singleTouchHandler) => {\n    if (e.touches.length <= 1) {\n      singleTouchHandler(e);\n    } else if (e.type === \"touchmove\" && e.touches.length === 2) {\n      this.isDragging = false;\n      // TODO\n      // this.handlePinch(e);\n    }\n  };\n}\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}