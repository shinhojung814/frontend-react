{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/PostList/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"./PostList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../../../Redux/actions/index.js\";\nimport SideBarModal2 from \"../SideBarModal2\";\nimport { Link } from \"react-router-dom\";\nimport api from '../../../../apis/index';\nimport HamburgerBtnImage from \"../../../../image/toggledown.png\";\nimport { S3URL } from \"../../../../shared/lib/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostItem = /*#__PURE__*/React.memo(_c = _s(function PostItem({\n  alien,\n  type,\n  selectedAlien\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    userId,\n    showModal2\n  } = useSelector(state => ({\n    userId: state.user.user.id,\n    showModal2: state.modalOnOff.showModal2\n  }));\n\n  const onClickGraduate = async () => {\n    let req = {\n      alien_id: alien.id\n    };\n    let res = await api.post(\"/alien/graduation\", req);\n    if (res.data.result === 'success') dispatch(actions.graduate(alien.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostItemBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uCC4C\\uB9B0\\uC9C0 : \\\"\", alien.challenge_name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\\uBB3C\\uACE0\\uAE30\",\n          src: S3URL + alien.image_url.split(\"-\")[0],\n          onClick: () => {\n            if (selectedAlien === alien.id) {\n              dispatch(actions.selectAlien(null));\n            } else {\n              dispatch(actions.selectAlien(alien.id));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SubInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC774\\uB984 : \", alien.alien_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uCD9C\\uC0DD\\uB144\\uB3C4 : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 22\n            }, this), alien.create_date.split(\"T\")[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Commit \\uD69F\\uC218 : \", alien.accured_auth_cnt, \"\\uBC88\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [type === \"personal\" && alien.status === 0 && alien.user_info_id === userId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"StyledButton\",\n          onClick: () => {\n            dispatch(actions.alienAuth({\n              alien\n            }));\n            dispatch(actions.showModal2(!showModal2));\n          },\n          children: \"\\uC778\\uC99D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SideBarModal2, {\n          alien: alien\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), type !== \"challenge\" && alien.status === 0 && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/challenge/${alien.Challenge_id}/room`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"StyledButton\",\n            children: \" \\uCC4C\\uB9B0\\uC9C0 \\uC5B4\\uD56D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), type === \"personal\" && alien.status === 0 && alien.user_info_id === userId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"StyledButton\",\n          onClick: onClickGraduate,\n          children: \" \\uC878\\uC5C5 \\uC2E0\\uCCAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"wiAIkQZcU0aHTKX+AC+opSyyA0w=\", false, function () {\n  return [useDispatch, useSelector];\n}));\n_c2 = PostItem;\nconst PostList = /*#__PURE__*/React.memo(_c3 = _s2(function PostList({\n  type\n}) {\n  _s2();\n\n  console.log();\n  const {\n    aliens_list,\n    selectedAlien\n  } = useSelector(({\n    room\n  }) => ({\n    aliens_list: room.aliens,\n    selectedAlien: room.selectedAlien\n  }));\n  const {\n    userId\n  } = useSelector(({\n    user\n  }) => ({\n    userId: user.user\n  }));\n  const [category, setCategory] = useState(false);\n  const [drop, setDrop] = useState(false);\n  const [sort, setSort] = useState(\"a\"); // functions for sort\n\n  const recentCreate = useCallback((a, b) => {\n    return new Date(b.create_date).getTime() - new Date(a.create_date).getTime();\n  }, []);\n\n  const leastRecentCreate = (a, b) => {\n    return new Date(a.create_date).getTime() - new Date(b.create_date).getTime();\n  };\n\n  const mostCommit = (a, b) => {\n    return b.accured_auth_cnt - a.accured_auth_cnt;\n  };\n\n  const leastCommit = (a, b) => {\n    return a.accured_auth_cnt - b.accured_auth_cnt;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostListBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdown\",\n      onClick: () => setDrop(drop => !drop),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"1.7em\",\n          height: \"1.7em\"\n        },\n        alt: \"toggledown.png\",\n        src: HamburgerBtnImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), drop ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        onClick: () => setSort(\"a\"),\n        children: \" \\uCD94\\uAC00\\uB41C \\uB0A0\\uC9DC (\\uCD5C\\uC2E0 \\uC21C) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        onClick: () => setSort(\"b\"),\n        children: \" \\uCD94\\uAC00\\uB41C \\uB0A0\\uC9DC (\\uC624\\uB798\\uB41C \\uC21C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        onClick: () => setSort(\"c\"),\n        children: \" \\uCEE4\\uBC0B \\uD69F\\uC218(\\uAC00\\uC7A5 \\uB9CE\\uC740 \\uC21C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        onClick: () => setSort(\"d\"),\n        children: \" \\uCEE4\\uBC0B \\uD69F\\uC218(\\uAC00\\uC7A5 \\uB0AE\\uC740 \\uC21C) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: category === false ? \"selected\" : null,\n        onClick: () => setCategory(category => !category),\n        children: \"\\u2218 \\uC9C4\\uD589\\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: category === true ? \"selected\" : null,\n        onClick: () => setCategory(category => !category),\n        children: \"\\u2218 \\uC878\\uC5C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), aliens_list.sort((a, b) => {\n      if (sort === 'a') return recentCreate(a, b);else if (sort === 'b') return leastRecentCreate(a, b);else if (sort === 'c') return mostCommit(a, b);else return leastCommit(a, b);\n    }).map(alien => Boolean(alien.status) === category ? /*#__PURE__*/_jsxDEV(PostItem, {\n      alien: alien,\n      type: type,\n      userId: userId,\n      selectedAlien: selectedAlien\n    }, alien.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }, this) : null)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}, \"LcVEpeTAT1NIMkMYglqEVDWF6lU=\", false, function () {\n  return [useSelector, useSelector];\n}));\n_c4 = PostList;\nexport default PostList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostItem$React.memo\");\n$RefreshReg$(_c2, \"PostItem\");\n$RefreshReg$(_c3, \"PostList$React.memo\");\n$RefreshReg$(_c4, \"PostList\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/PostList/index.js"],"names":["React","useCallback","useEffect","useState","useSelector","useDispatch","actions","SideBarModal2","Link","api","HamburgerBtnImage","S3URL","PostItem","memo","alien","type","selectedAlien","dispatch","userId","showModal2","state","user","id","modalOnOff","onClickGraduate","req","alien_id","res","post","data","result","graduate","challenge_name","image_url","split","selectAlien","alien_name","create_date","accured_auth_cnt","status","user_info_id","alienAuth","Challenge_id","PostList","console","log","aliens_list","room","aliens","category","setCategory","drop","setDrop","sort","setSort","recentCreate","a","b","Date","getTime","leastRecentCreate","mostCommit","leastCommit","width","height","map","Boolean"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./PostList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../../../Redux/actions/index.js\";\nimport SideBarModal2 from \"../SideBarModal2\";\nimport { Link } from \"react-router-dom\";\nimport api from '../../../../apis/index'\nimport HamburgerBtnImage from \"../../../../image/toggledown.png\";\nimport { S3URL } from \"../../../../shared/lib/Constants\";\n\nconst PostItem = React.memo(function PostItem({ alien, type, selectedAlien }) {\n  const dispatch = useDispatch();\n  const {userId, showModal2} = useSelector((state) => ({\n    userId : state.user.user.id,\n    showModal2 : state.modalOnOff.showModal2,\n  }));\n  \n\n  const onClickGraduate = async() =>{\n    let req = { alien_id: alien.id };\n    let res = await api.post(\"/alien/graduation\", req);\n    if (res.data.result === 'success')\n      dispatch(actions.graduate(alien.id))\n  }\n\n  return (\n    <>\n      <div className=\"PostItemBlock\">\n        <h2>챌린지 : \"{alien.challenge_name}\"</h2>\n        <div className=\"Content\">\n          <img\n            alt=\"물고기\"\n            src={S3URL + alien.image_url.split(\"-\")[0]}\n            onClick={() => {\n              if (selectedAlien === alien.id) {\n                dispatch(actions.selectAlien(null));\n              } else {\n                dispatch(actions.selectAlien(alien.id));\n              }\n            }}\n          />\n          <div className=\"SubInfo\">\n            <p>이름 : {alien.alien_name}</p>\n            <p>\n              출생년도 : <br />\n              {alien.create_date.split(\"T\")[0]}\n            </p>\n            <p>Commit 횟수 : {alien.accured_auth_cnt}번</p>\n          </div>\n        </div>\n        <div className=\"buttons\">\n          {type === \"personal\" && alien.status === 0 && alien.user_info_id === userId && ( \n            <button\n              className=\"StyledButton\"\n              onClick={() => {\n                dispatch(actions.alienAuth({ alien }));\n                dispatch(actions.showModal2(!showModal2));\n              }}\n            >\n              인증하기\n            </button>\n          )}\n          <SideBarModal2 alien={alien} />\n          {type !== \"challenge\" && alien.status === 0 && (\n            <Link to={`/challenge/${alien.Challenge_id}/room`}>\n              <button className=\"StyledButton\"> 챌린지 어항</button>\n            </Link>\n          )}\n          {type === \"personal\" && alien.status === 0 && alien.user_info_id === userId && (\n            <button className=\"StyledButton\" onClick = {onClickGraduate}> 졸업 신청</button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n\nconst PostList = React.memo(function PostList({ type }) {\n  console.log()\n  const { aliens_list, selectedAlien } = useSelector(({ room }) => ({\n    aliens_list: room.aliens,\n    selectedAlien: room.selectedAlien,\n  }));\n  const {userId} = useSelector(({user}) => ({\n    userId : user.user,\n  }));\n\n  const [category, setCategory] = useState(false);\n  const [drop, setDrop] = useState(false);\n  const [sort, setSort] = useState(\"a\");\n\n  // functions for sort\n  const recentCreate = useCallback((a,b) =>{\n    return new Date(b.create_date).getTime() - new Date(a.create_date).getTime();\n  },  [],)\n  const leastRecentCreate = (a,b) =>{\n    return new Date(a.create_date).getTime() - new Date(b.create_date).getTime();\n  }\n  const mostCommit = (a,b) =>{\n    return b.accured_auth_cnt - a.accured_auth_cnt;\n  }\n  const leastCommit = (a,b) =>{\n    return a.accured_auth_cnt - b.accured_auth_cnt;\n  }\n\n  return (\n    <div className=\"PostListBlock\">\n      <button className=\"dropdown\" onClick={() => setDrop((drop) => !drop)}>\n        <img\n          style={{ width: \"1.7em\", height: \"1.7em\" }}\n          alt=\"toggledown.png\"\n          src={HamburgerBtnImage}\n        />\n      </button>\n      {drop ? (\n        <div className=\"dropContent\">\n          <option onClick={() => setSort(\"a\")}> 추가된 날짜 (최신 순) </option>\n          <option onClick={() => setSort(\"b\")}> 추가된 날짜 (오래된 순)</option>\n          <option onClick={() => setSort(\"c\")}> 커밋 횟수(가장 많은 순)</option>\n          <option onClick={() => setSort(\"d\")}> 커밋 횟수(가장 낮은 순) </option>\n        </div>\n      ) : null}\n      <ul>\n        <span\n          className={category === false ? \"selected\" : null}\n          onClick={() => setCategory((category) => !category)}\n        >\n          ∘ 진행중\n        </span>\n        <span\n          className={category === true ? \"selected\" : null}\n          onClick={() => setCategory((category) => !category)}\n        >\n          ∘ 졸업\n        </span>\n      </ul>\n\n        {aliens_list\n          .sort((a, b) =>\n            {\n              if (sort ==='a') return recentCreate(a,b);\n              else if (sort === 'b') return leastRecentCreate(a,b);\n              else if (sort === 'c') return mostCommit(a,b);\n              else return leastCommit(a,b);\n            }\n          )\n          .map((alien) =>\n            Boolean(alien.status) === category ? (\n              <PostItem\n                key={alien.id}\n                alien={alien}\n                type={type}\n                userId = {userId}\n                selectedAlien={selectedAlien}\n              />\n            ) : null\n          )\n        }\n    </div>\n  );\n});\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}