{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport HorizonLine from \"../components/HorizonLine\";\nimport * as api from \"../apis/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInModal = ({\n  show,\n  onHide,\n  setSignInModalOn,\n  setLoginStatus\n}) => {\n  _s();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [signInClicked, setSignInClicked] = useState(false);\n  const [signInError, setSignInError] = useState(null);\n  const [signInMessage, setSignInMessage] = useState(null);\n\n  function validateEmail(userEmail) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test({\n      userEmail\n    })) {\n      return true;\n    } else {\n      setSignInMessage(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      alert(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n  }\n\n  const postSignIn = async () => {\n    let signInData = {\n      userEmail,\n      userPassword\n    };\n    const response = await api.post(\"/login_process\", signInData);\n    console.log(\"response\", response); // const data = await response.json();\n    // console.log(\"data\", data);\n  };\n\n  console.log(signInClicked); // 로그인 버튼을 처음 눌렀을 때만 포스트 요청이 보내지도록 설정 (useEffect, signInClicked 이용)\n\n  useEffect(() => {\n    try {\n      setSignInMessage(null);\n      setSignInError(null);\n      postSignIn(); // {서버로부터 받은 로그인 성공/실패 여부(ex. response.success) ? signInSuccess() : signInFailure()}\n    } catch (err) {\n      setSignInError(err);\n      console.log(\"SIGN-IN ERROR\", signInError);\n    }\n  }, [signInClicked]); // 회원정보 DB에서 관리하는 데이터가 signInData와 일치하면 signInSuccess() 그렇지 않으면 signInFailure() 실행\n  // ex) {signInResponse == \"success\" ? signInSuccess() : signInFailure()}\n\n  function signInSuccess() {\n    return () => {\n      // signInClicked 초기화\n      setSignInClicked(current => !current); // 로그인 팝업창 닫기\n\n      setSignInModalOn(false); // 로그인 상태 변경\n\n      setLoginStatus(true);\n    };\n  }\n\n  function signInFailure() {\n    return () => {\n      // signInClicked 초기화\n      setSignInClicked(current => !current); // 로그인 실패 메세지 띄우기\n      // showSignInMessage();\n\n      setSignInMessage(\"이메일과 패스워드가 일치하지 않습니다.\");\n    };\n  }\n\n  const onClick = event => {\n    event.preventDefault(); // {\n    //   validateEmail(userEmail) ? null : showSignInMessage();\n    // }\n\n    setSignInClicked(true);\n  }; // function showSignInMessage() {\n  //   return () => {\n  //     {\n  //       signIn성공/실패 여부\n  //         ? null\n  //         : {signInMessage}\n  //     }\n  //   };\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: styles.modal__form,\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form__signin,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: styles.form__input,\n              type: \"email\",\n              placeholder: \"helloalien@jungle.com\",\n              onChange: e => {\n                setUserEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"********\",\n              onChange: e => {\n                setUserPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: styles.form__signin__message,\n            children: [signInMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"my-3\",\n            type: \"button\",\n            variant: \"success\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: onClick,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInModal, \"T0Kb35FuRHwFIWjyGkam6MGV3FU=\");\n\n_c = SignInModal;\nexport default SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/modals/SignInModal.js"],"names":["React","useState","useEffect","Button","Container","Form","Modal","styles","HorizonLine","api","SignInModal","show","onHide","setSignInModalOn","setLoginStatus","userEmail","setUserEmail","userPassword","setUserPassword","signInClicked","setSignInClicked","signInError","setSignInError","signInMessage","setSignInMessage","validateEmail","test","alert","postSignIn","signInData","response","post","console","log","err","signInSuccess","current","signInFailure","onClick","event","preventDefault","modal__form","container","form__signin","form__input","e","target","value","form__signin__message","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,KAAlC,QAA+C,iBAA/C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,gBAAhB;AAAkCC,EAAAA;AAAlC,CAAD,KAAwD;AAAA;;AAC1E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,IAAD,CAAlD;;AAEA,WAASwB,aAAT,CAAuBV,SAAvB,EAAkC;AAChC,QAAI,gDAAgDW,IAAhD,CAAqD;AAAEX,MAAAA;AAAF,KAArD,CAAJ,EAAyE;AACvE,aAAO,IAAP;AACD,KAFD,MAEO;AACLS,MAAAA,gBAAgB,CAAC,yBAAD,CAAhB;AACAG,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,aAAO,KAAP;AACD;AACF;;AAED,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAIC,UAAU,GAAG;AAAEd,MAAAA,SAAF;AAAaE,MAAAA;AAAb,KAAjB;AACA,UAAMa,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAJ,CAAS,gBAAT,EAA2BF,UAA3B,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB,EAH6B,CAI7B;AACA;AACD,GAND;;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ,EA1B0E,CA4B1E;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFsB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAM,MAAAA,UAAU,GAHR,CAIF;AACD,KALD,CAKE,OAAOM,GAAP,EAAY;AACZZ,MAAAA,cAAc,CAACY,GAAD,CAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,WAA7B;AACD;AACF,GAVQ,EAUN,CAACF,aAAD,CAVM,CAAT,CA7B0E,CAyC1E;AACA;;AAEA,WAASgB,aAAT,GAAyB;AACvB,WAAO,MAAM;AACX;AACAf,MAAAA,gBAAgB,CAAEgB,OAAD,IAAa,CAACA,OAAf,CAAhB,CAFW,CAGX;;AACAvB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB,CAJW,CAKX;;AACAC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAPD;AAQD;;AAED,WAASuB,aAAT,GAAyB;AACvB,WAAO,MAAM;AACX;AACAjB,MAAAA,gBAAgB,CAAEgB,OAAD,IAAa,CAACA,OAAf,CAAhB,CAFW,CAGX;AACA;;AACAZ,MAAAA,gBAAgB,CAAC,uBAAD,CAAhB;AACD,KAND;AAOD;;AAED,QAAMc,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN,GADyB,CAEzB;AACA;AACA;;AACApB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAND,CAjE0E,CAyE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAEb,MAAM,CAACkC,WADpB;AAEE,IAAA,IAAI,EAAE9B,IAFR;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,uBAAgB,+BAJlB;AAKE,IAAA,QAAQ,MALV;AAAA,2BAOE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEL,MAAM,CAACmC,SAA7B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEnC,MAAM,CAACoC,YAAxB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,EAAEpC,MAAM,CAACqC,WADpB;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,WAAW,EAAC,uBAHd;AAIE,cAAA,QAAQ,EAAGC,CAAD,IAAO;AACf7B,gBAAAA,YAAY,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD;AANH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,QAAQ,EAAGF,CAAD,IAAO;AACf3B,gBAAAA,eAAe,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD;AALH;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eA0BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAExC,MAAM,CAACyC,qBAA9B;AAAA,uBAEGzB,aAFH,eAGE;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eAgCE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAC,SAHV;AAIE,YAAA,KAAK,EAAE;AACL0B,cAAAA,KAAK,EAAE;AADF,aAJT;AAOE,YAAA,OAAO,EAAEX,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAhJD;;GAAM5B,W;;KAAAA,W;AAkJN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Form, Modal } from \"react-bootstrap\";\nimport styles from \"./SignInModal.module.css\";\nimport HorizonLine from \"../components/HorizonLine\";\nimport * as api from \"../apis/index.js\";\n\nconst SignInModal = ({ show, onHide, setSignInModalOn, setLoginStatus }) => {\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const [signInClicked, setSignInClicked] = useState(false);\n  const [signInError, setSignInError] = useState(null);\n  const [signInMessage, setSignInMessage] = useState(null);\n\n  function validateEmail(userEmail) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test({ userEmail })) {\n      return true;\n    } else {\n      setSignInMessage(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      alert(\"입력하신 이메일 주소가 유효하지 않습니다.\");\n      return false;\n    }\n  }\n\n  const postSignIn = async () => {\n    let signInData = { userEmail, userPassword };\n    const response = await api.post(\"/login_process\", signInData);\n    console.log(\"response\", response);\n    // const data = await response.json();\n    // console.log(\"data\", data);\n  };\n\n  console.log(signInClicked);\n\n  // 로그인 버튼을 처음 눌렀을 때만 포스트 요청이 보내지도록 설정 (useEffect, signInClicked 이용)\n  useEffect(() => {\n    try {\n      setSignInMessage(null);\n      setSignInError(null);\n      postSignIn();\n      // {서버로부터 받은 로그인 성공/실패 여부(ex. response.success) ? signInSuccess() : signInFailure()}\n    } catch (err) {\n      setSignInError(err);\n      console.log(\"SIGN-IN ERROR\", signInError);\n    }\n  }, [signInClicked]);\n\n  // 회원정보 DB에서 관리하는 데이터가 signInData와 일치하면 signInSuccess() 그렇지 않으면 signInFailure() 실행\n  // ex) {signInResponse == \"success\" ? signInSuccess() : signInFailure()}\n\n  function signInSuccess() {\n    return () => {\n      // signInClicked 초기화\n      setSignInClicked((current) => !current);\n      // 로그인 팝업창 닫기\n      setSignInModalOn(false);\n      // 로그인 상태 변경\n      setLoginStatus(true);\n    };\n  }\n\n  function signInFailure() {\n    return () => {\n      // signInClicked 초기화\n      setSignInClicked((current) => !current);\n      // 로그인 실패 메세지 띄우기\n      // showSignInMessage();\n      setSignInMessage(\"이메일과 패스워드가 일치하지 않습니다.\");\n    };\n  }\n\n  const onClick = (event) => {\n    event.preventDefault();\n    // {\n    //   validateEmail(userEmail) ? null : showSignInMessage();\n    // }\n    setSignInClicked(true);\n  };\n\n  // function showSignInMessage() {\n  //   return () => {\n  //     {\n  //       signIn성공/실패 여부\n  //         ? null\n  //         : {signInMessage}\n  //     }\n  //   };\n  // }\n\n  return (\n    <Modal\n      className={styles.modal__form}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Container className={styles.container}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">로그인</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className={styles.form__signin}>\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Form.Control\n                className={styles.form__input}\n                type=\"email\"\n                placeholder=\"helloalien@jungle.com\"\n                onChange={(e) => {\n                  setUserEmail(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>패스워드</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"********\"\n                onChange={(e) => {\n                  setUserPassword(e.target.value);\n                }}\n              />\n              <br />\n            </Form.Group>\n\n            <Form.Group className={styles.form__signin__message}>\n              {/* 이메일과 패스워드가 일치하지 않습니다. */}\n              {signInMessage}\n              <br />\n            </Form.Group>\n\n            <Button\n              className=\"my-3\"\n              type=\"button\"\n              variant=\"success\"\n              style={{\n                width: \"100%\",\n              }}\n              onClick={onClick}\n            >\n              로그인\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default SignInModal;\n"]},"metadata":{},"sourceType":"module"}