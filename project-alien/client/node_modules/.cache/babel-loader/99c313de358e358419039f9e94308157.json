{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/ChatModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport * as socket from \"../../../../apis/socket\";\nimport api from \"../../../../apis/index\";\nimport \"./Chat.css\";\nimport { useDispatch, useSelector // useDispatch\n} from \"react-redux\";\nimport * as actions from \"../../../../Redux/actions/index.js\"; // import api from \"../../../../apis/index.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChallengeModal = props => {\n  _s();\n\n  const [currentMessage, setCurrentMessage] = useState(\"\"); // const [messageList, setMessageList] = useState([]);\n\n  const dispatch = useDispatch();\n  const {\n    challengeId\n  } = useParams();\n  const {\n    roomId\n  } = useSelector(({\n    room\n  }) => ({\n    roomId: room.roomId\n  }));\n  const {\n    user\n  } = useSelector(({\n    user\n  }) => ({\n    user: user.user\n  }));\n  const {\n    chalInfoModal\n  } = useSelector(({\n    modalOnOff\n  }) => ({\n    chalInfoModal: modalOnOff.chalInfoModal\n  })); // useEffect(() => {\n  //   const getLastchat = async () => {\n  //     const res = await api.get(`/chat/${challengeId}`);\n  //     res.data.data.map((msg, index) => {\n  //       dispatch(actions.setMessage(msg));\n  //     });\n  //     console.log(\"CHAT \", res.data.data);\n  //   };\n  //   if (challengeId) getLastchat();\n  // }, []);\n\n  let {\n    messages\n  } = useSelector(({\n    room\n  }) => ({\n    messages: room.messages\n  }));\n  const {\n    modalType\n  } = props;\n  const toggle = modalType && chalInfoModal === modalType; // const dispatch = useDispatch();\n\n  const saveChat = async messageData => {\n    messageData.challenge_id = challengeId;\n    const result = await api.post(\"/chat\", messageData);\n    console.log(result);\n  };\n\n  const sendMessage = async () => {\n    if (!user) return;\n\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: roomId,\n        user_nickname: user.nickname,\n        message: currentMessage,\n        time: new Date(Date.now()).getMonth() + 1 + \"월\" + \" \" + new Date(Date.now()).getDate() + \"일\" + \" \" + new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      console.log(messageData);\n      saveChat(messageData);\n      socket.messageSend(messageData);\n      dispatch(actions.setMessage([messageData]));\n      setCurrentMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: toggle ? \"ChallengeContainer\" : \"hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxborder  px-1 mx-auto py-1 my-auto h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-sans text-white bg-indigo-400 bg-opacity-25 rounded-xl\",\n          children: [\"TALK !\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"messages\",\n        children: !!user && messages.map((messageContent, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: user.nickname === messageContent.user_nickname ? \"you\" : \"other\" // css 파일에서 구분\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-align\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.user_nickname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input\",\n            type: \"text\",\n            value: currentMessage,\n            placeholder: \" Hey.....\",\n            onChange: event => {\n              setCurrentMessage(event.target.value);\n            },\n            onKeyPress: event => {\n              event.key === \"Enter\" && sendMessage();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute right-0 items-center inset-y-0 md:flex\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send-button\",\n              onClick: sendMessage,\n              children: \"\\u25BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChallengeModal, \"BOMolFMZ5hj+Sm2HJfLz+9kFvjw=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ChallengeModal;\nexport default ChallengeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeModal\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/ListCtrl/ChatModal/index.js"],"names":["React","useState","useEffect","useParams","ScrollToBottom","socket","api","useDispatch","useSelector","actions","ChallengeModal","props","currentMessage","setCurrentMessage","dispatch","challengeId","roomId","room","user","chalInfoModal","modalOnOff","messages","modalType","toggle","saveChat","messageData","challenge_id","result","post","console","log","sendMessage","user_nickname","nickname","message","time","Date","now","getMonth","getDate","getHours","getMinutes","messageSend","setMessage","map","messageContent","index","event","target","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,yBAAxB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAO,YAAP;AACA,SACEC,WADF,EAEEC,WAFF,CAGE;AAHF,OAIO,aAJP;AAKA,OAAO,KAAKC,OAAZ,MAAyB,oCAAzB,C,CACA;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD,CADgC,CAEhC;;AACA,QAAMa,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBZ,SAAS,EAAjC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaR,WAAW,CAAC,CAAC;AAAES,IAAAA;AAAF,GAAD,MAAe;AAC5CD,IAAAA,MAAM,EAAEC,IAAI,CAACD;AAD+B,GAAf,CAAD,CAA9B;AAGA,QAAM;AAAEE,IAAAA;AAAF,MAAWV,WAAW,CAAC,CAAC;AAAEU,IAAAA;AAAF,GAAD,MAAe;AAAEA,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAAb,GAAf,CAAD,CAA5B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAoBX,WAAW,CAAC,CAAC;AAAEY,IAAAA;AAAF,GAAD,MAAqB;AACzDD,IAAAA,aAAa,EAAEC,UAAU,CAACD;AAD+B,GAArB,CAAD,CAArC,CAVgC,CAchC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI;AAAEE,IAAAA;AAAF,MAAeb,WAAW,CAAC,CAAC;AAAES,IAAAA;AAAF,GAAD,MAAe;AAC5CI,IAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAD6B,GAAf,CAAD,CAA9B;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,KAAtB;AACA,QAAMY,MAAM,GAAGD,SAAS,IAAIH,aAAa,KAAKG,SAA9C,CA7BgC,CA8BhC;;AAEA,QAAME,QAAQ,GAAG,MAAOC,WAAP,IAAuB;AACtCA,IAAAA,WAAW,CAACC,YAAZ,GAA2BX,WAA3B;AACA,UAAMY,MAAM,GAAG,MAAMrB,GAAG,CAACsB,IAAJ,CAAS,OAAT,EAAkBH,WAAlB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAJD;;AAMA,QAAMI,WAAW,GAAG,YAAY;AAC9B,QAAI,CAACb,IAAL,EAAW;;AACX,QAAIN,cAAc,KAAK,EAAvB,EAA2B;AACzB,YAAMa,WAAW,GAAG;AAClBR,QAAAA,IAAI,EAAED,MADY;AAElBgB,QAAAA,aAAa,EAAEd,IAAI,CAACe,QAFF;AAGlBC,QAAAA,OAAO,EAAEtB,cAHS;AAIlBuB,QAAAA,IAAI,EACF,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KACA,CADA,GAEA,GAFA,GAGA,GAHA,GAIA,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,OAArB,EAJA,GAKA,GALA,GAMA,GANA,GAOA,IAAIH,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBG,QAArB,EAPA,GAQA,GARA,GASA,IAAIJ,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBI,UAArB;AAdgB,OAApB;AAgBAZ,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACAD,MAAAA,QAAQ,CAACC,WAAD,CAAR;AACApB,MAAAA,MAAM,CAACqC,WAAP,CAAmBjB,WAAnB;AACAX,MAAAA,QAAQ,CAACL,OAAO,CAACkC,UAAR,CAAmB,CAAClB,WAAD,CAAnB,CAAD,CAAR;AACAZ,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AACF,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAEU,MAAM,GAAG,oBAAH,GAA0B,QAAhD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,6DAAb;AAAA,+BACS,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAQE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAA,kBACG,CAAC,CAACL,IAAF,IACCG,QAAQ,CAACuB,GAAT,CAAa,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AACtC,8BACE;AACE,YAAA,SAAS,EAAC,SADZ;AAGE,YAAA,EAAE,EACA5B,IAAI,CAACe,QAAL,KAAkBY,cAAc,CAACb,aAAjC,GACI,KADJ,GAEI,OANR,CAOI;AAPJ;AAAA,mCASE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACE;AAAA,4BAAIa,cAAc,CAACX;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AAAA,4BAAIW,cAAc,CAACV;AAAnB;AAAA;AAAA;AAAA;AAAA,wBADF,2BAGE;AAAA,4BAAIU,cAAc,CAACb;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,aAEOc,KAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAsBD,SAvBD;AAFJ;AAAA;AAAA;AAAA;AAAA,cARF,eAoCE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAElC,cAHT;AAIE,YAAA,WAAW,EAAC,WAJd;AAKE,YAAA,QAAQ,EAAGmC,KAAD,IAAW;AACnBlC,cAAAA,iBAAiB,CAACkC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,aAPH;AAQE,YAAA,UAAU,EAAGF,KAAD,IAAW;AACrBA,cAAAA,KAAK,CAACG,GAAN,KAAc,OAAd,IAAyBnB,WAAW,EAApC;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,iDAAf;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,OAAO,EAAEA,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CAjID;;GAAMrB,c;UAGaH,W,EACOJ,S,EACLK,W,EAGFA,W,EAESA,W,EAePA,W;;;KAzBfE,c;AAmIN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport * as socket from \"../../../../apis/socket\";\nimport api from \"../../../../apis/index\";\nimport \"./Chat.css\";\nimport {\n  useDispatch,\n  useSelector,\n  // useDispatch\n} from \"react-redux\";\nimport * as actions from \"../../../../Redux/actions/index.js\";\n// import api from \"../../../../apis/index.js\";\n\nconst ChallengeModal = (props) => {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  // const [messageList, setMessageList] = useState([]);\n  const dispatch = useDispatch();\n  const { challengeId } = useParams();\n  const { roomId } = useSelector(({ room }) => ({\n    roomId: room.roomId,\n  }));\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n\n  const { chalInfoModal } = useSelector(({ modalOnOff }) => ({\n    chalInfoModal: modalOnOff.chalInfoModal,\n  }));\n\n  // useEffect(() => {\n  //   const getLastchat = async () => {\n  //     const res = await api.get(`/chat/${challengeId}`);\n  //     res.data.data.map((msg, index) => {\n  //       dispatch(actions.setMessage(msg));\n  //     });\n  //     console.log(\"CHAT \", res.data.data);\n  //   };\n  //   if (challengeId) getLastchat();\n  // }, []);\n\n  let { messages } = useSelector(({ room }) => ({\n    messages: room.messages,\n  }));\n  const { modalType } = props;\n  const toggle = modalType && chalInfoModal === modalType;\n  // const dispatch = useDispatch();\n\n  const saveChat = async (messageData) => {\n    messageData.challenge_id = challengeId;\n    const result = await api.post(\"/chat\", messageData);\n    console.log(result);\n  };\n\n  const sendMessage = async () => {\n    if (!user) return;\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: roomId,\n        user_nickname: user.nickname,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getMonth() +\n          1 +\n          \"월\" +\n          \" \" +\n          new Date(Date.now()).getDate() +\n          \"일\" +\n          \" \" +\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n      console.log(messageData);\n      saveChat(messageData);\n      socket.messageSend(messageData);\n      dispatch(actions.setMessage([messageData]));\n      setCurrentMessage(\"\");\n    }\n  };\n\n  return (\n    <div className={toggle ? \"ChallengeContainer\" : \"hidden\"}>\n      <div className=\"boxborder  px-1 mx-auto py-1 my-auto h-full\">\n        <div className=\"chat-header\">\n          <p className=\"font-sans text-white bg-indigo-400 bg-opacity-25 rounded-xl\">\n            TALK !{\" \"}\n          </p>\n        </div>\n        <br />\n\n        <ScrollToBottom className=\"messages\">\n          {!!user &&\n            messages.map((messageContent, index) => {\n              return (\n                <div\n                  className=\"message\"\n                  key={index}\n                  id={\n                    user.nickname === messageContent.user_nickname\n                      ? \"you\"\n                      : \"other\"\n                  } // css 파일에서 구분\n                >\n                  <div className=\"message-align\">\n                    <div className=\"message-content\">\n                      <p>{messageContent.message}</p>\n                    </div>\n                    <div className=\"message-meta\">\n                      <p>{messageContent.time}</p>\n                      &nbsp;&nbsp;\n                      <p>{messageContent.user_nickname}</p>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </ScrollToBottom>\n\n        <div className=\"chat-footer\">\n          <div className=\"relative flex\">\n            <input\n              className=\"chat-input\"\n              type=\"text\"\n              value={currentMessage}\n              placeholder=\" Hey.....\"\n              onChange={(event) => {\n                setCurrentMessage(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                event.key === \"Enter\" && sendMessage();\n              }}\n            />\n            <div className=\"absolute right-0 items-center inset-y-0 md:flex\">\n              <button className=\"send-button\" onClick={sendMessage}>\n                &#9658;\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default ChallengeModal;\n"]},"metadata":{},"sourceType":"module"}