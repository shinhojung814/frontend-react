{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Room from \"./Room\";\nimport Header from \"./Header\";\nimport FieldCtrl from \"./FieldCtrl\";\nimport MultiField from \"./MultiField\";\nimport api from \"../../apis\";\nimport * as socket from \"../../apis/socket\"; // import background from \"./image/univ.jpg\";\n\nimport styles from \"./index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiAquarium() {\n  _s();\n\n  const [roomIds, setRoomIds] = useState([]);\n  const [currRoomId, setCurrRoomId] = useState(null);\n  const rooms = useRef(); // 챌린지 정보 가져오기\n\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/test\");\n        console.log(\"fetch test data\", res.data); // 서버에서 데이터를 받아온 상황을 전제로 구성\n\n        let roomIds = [1, 2, 3]; // rooms 상태 정보\n\n        rooms.current = {};\n        roomIds.forEach(roomId => {\n          rooms.current[roomId] = new Room(roomId);\n        }); // roomIds: react에서 state로 관리할 정보\n\n        setRoomIds(roomIds);\n        setCurrRoomId(roomIds[0]);\n        console.log(\"rooms\", rooms.current);\n      };\n\n      fetchData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n  }, []);\n  useEffect(() => {\n    // rooms가 생성되었는지 확인\n    if (!rooms.current || !currRoomId) return;\n    console.log(\"set currRoomId\", currRoomId);\n    socket.initAndJoin(currRoomId);\n    socket.subscribe(rooms.current[currRoomId].updateFieldState);\n    return () => {\n      socket.disconnect();\n    };\n  }, [currRoomId]);\n  console.log(\"[MultiAquarium] currRoomId\", currRoomId, rooms);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecHead,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        rooms: roomIds,\n        roomId: currRoomId,\n        setRoomId: setCurrRoomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecFieldCtrl,\n      children: /*#__PURE__*/_jsxDEV(FieldCtrl, {\n        room: rooms.current && rooms.current[currRoomId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecField,\n      children: /*#__PURE__*/_jsxDEV(MultiField, {\n        room: rooms.current && rooms.current[currRoomId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiAquarium, \"aGAiip9+yUePWyDqGNehyGXjnp4=\");\n\n_c = MultiAquarium;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiAquarium\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js"],"names":["React","useState","useEffect","useRef","Room","Header","FieldCtrl","MultiField","api","socket","styles","MultiAquarium","roomIds","setRoomIds","currRoomId","setCurrRoomId","rooms","fetchData","res","get","console","log","data","current","forEach","roomId","err","error","initAndJoin","subscribe","updateFieldState","disconnect","body","SecHead","SecFieldCtrl","SecField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport Room from \"./Room\";\nimport Header from \"./Header\";\nimport FieldCtrl from \"./FieldCtrl\";\nimport MultiField from \"./MultiField\";\nimport api from \"../../apis\";\nimport * as socket from \"../../apis/socket\";\n// import background from \"./image/univ.jpg\";\nimport styles from \"./index.module.css\";\n\nexport default function MultiAquarium() {\n  const [roomIds, setRoomIds] = useState([]);\n  const [currRoomId, setCurrRoomId] = useState(null);\n  const rooms = useRef();\n\n  // 챌린지 정보 가져오기\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/test\");\n        console.log(\"fetch test data\", res.data);\n\n        // 서버에서 데이터를 받아온 상황을 전제로 구성\n        let roomIds = [1, 2, 3];\n\n        // rooms 상태 정보\n        rooms.current = {};\n        roomIds.forEach((roomId) => {\n          rooms.current[roomId] = new Room(roomId);\n        });\n\n        // roomIds: react에서 state로 관리할 정보\n        setRoomIds(roomIds);\n        setCurrRoomId(roomIds[0]);\n        console.log(\"rooms\", rooms.current);\n      };\n      fetchData();\n    } catch (err) {\n      console.error(\"fetchData fail\", err);\n    }\n  }, []);\n\n  useEffect(() => {\n    // rooms가 생성되었는지 확인\n    if (!rooms.current || !currRoomId) return;\n\n    console.log(\"set currRoomId\", currRoomId);\n    socket.initAndJoin(currRoomId);\n    socket.subscribe(rooms.current[currRoomId].updateFieldState);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [currRoomId]);\n\n  console.log(\"[MultiAquarium] currRoomId\", currRoomId, rooms);\n  return (\n    <div className={styles.body}>\n      {/* <img src={background} alt=\"배경화면\"></img> */}\n      <section className={styles.SecHead}>\n        <Header rooms={roomIds} roomId={currRoomId} setRoomId={setCurrRoomId} />\n      </section>\n      <section className={styles.SecFieldCtrl}>\n        <FieldCtrl room={rooms.current && rooms.current[currRoomId]} />\n      </section>\n      <section className={styles.SecField}>\n        <MultiField room={rooms.current && rooms.current[currRoomId]} />\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}