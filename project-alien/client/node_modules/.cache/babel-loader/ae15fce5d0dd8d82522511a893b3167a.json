{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import './bootstrap.min.css';\n\nimport Header from \"./Header\";\nimport MultiField from \"./MultiField\";\nimport * as api from \"../../apis\";\nimport * as socket from \"../../apis/socket\";\nimport styles from \"./index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiAquarium() {\n  _s();\n\n  const [testNum, setTestNum] = useState(-1); // temp: selecting room\n\n  const rooms = [1, 2, 3];\n  const [roomId, setRoomId] = useState(rooms[0]);\n  const [fieldState, setFieldState] = useState(null); // fetch test data\n\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/test\");\n        const data = await res.json();\n        console.log(data);\n        setTestNum(Math.round(data.body * 10000) / 10000);\n      };\n\n      fetchData();\n    } catch (err) {\n      console.error(err);\n    }\n  }, []); // init socket\n\n  const updateFieldState = fieldState => {\n    const monsterLength = Object.keys(fieldState.monsters).length; // console.log(\"[socket] fieldState:\", monsterLength);\n\n    if (monsterLength <= 0) {\n      console.error(\"ERROR!! zero monster issue should be fixed!!\");\n      return;\n    }\n\n    setFieldState(fieldState);\n  };\n\n  useEffect(() => {\n    socket.initAndJoin(roomId);\n    socket.subscribe(updateFieldState);\n    return () => {\n      socket.disconnect();\n    };\n  }, [roomId]); // console.log(\"[MultiAquarium] roomId\", roomId);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecHead,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        rooms: rooms,\n        roomId: roomId,\n        setRoomId: setRoomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.SecField,\n      children: /*#__PURE__*/_jsxDEV(MultiField, {\n        seed: testNum,\n        roomId: roomId,\n        fieldState: fieldState,\n        setFieldState: setFieldState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiAquarium, \"NeDXrh5F25eNU0RBjMjX1iBOJjQ=\");\n\n_c = MultiAquarium;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiAquarium\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/index.js"],"names":["React","useState","useEffect","Header","MultiField","api","socket","styles","MultiAquarium","testNum","setTestNum","rooms","roomId","setRoomId","fieldState","setFieldState","fetchData","res","get","data","json","console","log","Math","round","body","err","error","updateFieldState","monsterLength","Object","keys","monsters","length","initAndJoin","subscribe","disconnect","SecHead","SecField"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAC,CAAF,CAAtC,CADsC,CAGtC;;AACA,QAAMU,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACU,KAAK,CAAC,CAAD,CAAN,CAApC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C,CANsC,CAQtC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMc,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,OAAR,CAAlB;AACA,cAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAT,QAAAA,UAAU,CAACa,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACM,IAAL,GAAY,KAAvB,IAAgC,KAAjC,CAAV;AACD,OALD;;AAOAT,MAAAA,SAAS;AACV,KATD,CASE,OAAOU,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF,GAbQ,EAaN,EAbM,CAAT,CATsC,CAwBtC;;AACA,QAAME,gBAAgB,GAAId,UAAD,IAAgB;AACvC,UAAMe,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYjB,UAAU,CAACkB,QAAvB,EAAiCC,MAAvD,CADuC,CAEvC;;AACA,QAAIJ,aAAa,IAAI,CAArB,EAAwB;AACtBR,MAAAA,OAAO,CAACM,KAAR,CAAc,8CAAd;AACA;AACD;;AACDZ,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAAC4B,WAAP,CAAmBtB,MAAnB;AACAN,IAAAA,MAAM,CAAC6B,SAAP,CAAiBP,gBAAjB;AAEA,WAAO,MAAM;AACXtB,MAAAA,MAAM,CAAC8B,UAAP;AACD,KAFD;AAGD,GAPQ,EAON,CAACxB,MAAD,CAPM,CAAT,CAnCsC,CA4CtC;;AACA,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACkB,IAAvB;AAAA,4BACE;AAAS,MAAA,SAAS,EAAElB,MAAM,CAAC8B,OAA3B;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE1B,KAAf;AAAsB,QAAA,MAAM,EAAEC,MAA9B;AAAsC,QAAA,SAAS,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,SAAS,EAAEN,MAAM,CAAC+B,QAA3B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAE7B,OADR;AAEE,QAAA,MAAM,EAAEG,MAFV;AAGE,QAAA,UAAU,EAAEE,UAHd;AAIE,QAAA,aAAa,EAAEC;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5DuBP,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import './bootstrap.min.css';\n\nimport Header from \"./Header\";\nimport MultiField from \"./MultiField\";\nimport * as api from \"../../apis\";\nimport * as socket from \"../../apis/socket\";\n\nimport styles from \"./index.module.css\";\n\nexport default function MultiAquarium() {\n  const [testNum, setTestNum] = useState(-1);\n\n  // temp: selecting room\n  const rooms = [1, 2, 3];\n  const [roomId, setRoomId] = useState(rooms[0]);\n  const [fieldState, setFieldState] = useState(null);\n\n  // fetch test data\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        const res = await api.get(\"/test\");\n        const data = await res.json();\n        console.log(data);\n        setTestNum(Math.round(data.body * 10000) / 10000);\n      };\n\n      fetchData();\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  // init socket\n  const updateFieldState = (fieldState) => {\n    const monsterLength = Object.keys(fieldState.monsters).length;\n    // console.log(\"[socket] fieldState:\", monsterLength);\n    if (monsterLength <= 0) {\n      console.error(\"ERROR!! zero monster issue should be fixed!!\");\n      return;\n    }\n    setFieldState(fieldState);\n  };\n\n  useEffect(() => {\n    socket.initAndJoin(roomId);\n    socket.subscribe(updateFieldState);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [roomId]);\n\n  // console.log(\"[MultiAquarium] roomId\", roomId);\n  return (\n    <div className={styles.body}>\n      <section className={styles.SecHead}>\n        <Header rooms={rooms} roomId={roomId} setRoomId={setRoomId} />\n      </section>\n      <section className={styles.SecField}>\n        <MultiField\n          seed={testNum}\n          roomId={roomId}\n          fieldState={fieldState}\n          setFieldState={setFieldState}\n        />\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}