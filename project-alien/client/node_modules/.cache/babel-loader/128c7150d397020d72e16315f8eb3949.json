{"ast":null,"code":"var _jsxFileName = \"/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/AlienCtrl/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useMatch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\nimport styles from \"./index.module.css\";\nimport classNames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nconst DAY_TEXT = {\n  0: {\n    en: \"sun\",\n    kr: \"일\"\n  },\n  1: {\n    en: \"mon\",\n    kr: \"월\"\n  },\n  2: {\n    en: \"tue\",\n    kr: \"화\"\n  },\n  3: {\n    en: \"wed\",\n    kr: \"수\"\n  },\n  4: {\n    en: \"thu\",\n    kr: \"목\"\n  },\n  5: {\n    en: \"fri\",\n    kr: \"금\"\n  },\n  6: {\n    en: \"sat\",\n    kr: \"토\"\n  }\n};\nexport default function AlienCtrl(props) {\n  _s();\n\n  const {\n    user,\n    aliens,\n    selectedAlien\n  } = useSelector(({\n    user,\n    room\n  }) => ({\n    user: user.user,\n    aliens: room.aliens,\n    selectedAlien: room.selectedAlien\n  }));\n  let alien = aliens.find(a => a.id === selectedAlien);\n  const challengeMatch = useMatch(\"/challenge/:challengeId/room\");\n  const userMatch = useMatch(\"/user/:userId/room\"); // const mainMatch = useMatch(\"/\");\n\n  const dispatch = useDispatch(); // todo 조건 강화!\n\n  if (!alien) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"body\"),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC0DD\\uBA85\\uCCB4\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    const todayValue = new Date().getDay();\n    const isPracticeDay = !!alien[DAY_TEXT[todayValue].en];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"body\", \"body--selected\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(\"row\"),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.challengeName,\n          children: `${alien.challenge_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(\"row\"),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.userName,\n          children: [`${alien.user_nickname}`, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.authCnt,\n            children: ` (${alien.accumulated_count}회 인증)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.daylist,\n        children: [0, 1, 2, 3, 4, 5, 6].map(day => {\n          let dayType = \"default\";\n          if (!!alien[DAY_TEXT[day].en]) dayType = \"selected\";\n          if (day === todayValue && isPracticeDay) dayType = \"today\"; // if (!!alien[day] && (new Date()).getDay() = )\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: cx(\"day\", `day--${dayType}`),\n            children: DAY_TEXT[day].kr\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnRow,\n        children: [!challengeMatch && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/challenge/${alien.challenge_id}/room`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx(\"btn\"),\n            children: \"\\uCC4C\\uB9B0\\uC9C0 \\uC5B4\\uD56D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), !userMatch && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/${alien.user_info_id}/room`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx(\"btn\"),\n            children: \"\\uCC38\\uAC00\\uC790 \\uC5B4\\uD56D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), !!userMatch && user.login && user.id === parseInt(alien.user_info_id) && /*#__PURE__*/_jsxDEV(PracticeBtn, {\n          alien: alien,\n          isPracticeDay: isPracticeDay,\n          handleClick: () => dispatch(actions.showAuthRequest(true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(AlienCtrl, \"yptBUHuP1xJ0FNj4LbOxtu56nLw=\", false, function () {\n  return [useSelector, useMatch, useMatch, useDispatch];\n});\n\n_c = AlienCtrl;\n\nfunction PracticeBtn(props) {\n  const {\n    alien,\n    handleClick,\n    isPracticeDay\n  } = props;\n\n  if (alien.alien_status === 1) {\n    // 졸업\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: cx(\"btn\", \"btn--graduated\", \"btn--disabled\"),\n      children: \"\\uC878\\uC5C5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  } else if (alien.practice_status === 1) {\n    // 승인 대기\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: cx(\"btn\", \"btn--ready\", \"btn--disabled\"),\n      children: \"\\uC2B9\\uC778 \\uB300\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  } else if (alien.practice_status === 2 || !isPracticeDay) {\n    // 인증 완료\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: cx(\"btn\", \"btn--complete\", \"btn--disabled\"),\n      children: \"\\uC778\\uC99D \\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  } else {\n    // 인증하기\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: cx(\"btn\"),\n      onClick: handleClick,\n      children: \"\\uC778\\uC99D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c2 = PracticeBtn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlienCtrl\");\n$RefreshReg$(_c2, \"PracticeBtn\");","map":{"version":3,"sources":["/Users/shinhojung/git/raising-alien-creatures/client/src/pages/MultiAquarium/AlienCtrl/index.js"],"names":["React","Link","useMatch","useDispatch","useSelector","actions","styles","classNames","cx","bind","DAY_TEXT","en","kr","AlienCtrl","props","user","aliens","selectedAlien","room","alien","find","a","id","challengeMatch","userMatch","dispatch","todayValue","Date","getDay","isPracticeDay","challengeName","challenge_name","userName","user_nickname","authCnt","accumulated_count","daylist","map","day","dayType","btnRow","challenge_id","user_info_id","login","parseInt","showAuthRequest","PracticeBtn","handleClick","alien_status","practice_status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, useMatch } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../Redux/actions\";\n\nimport styles from \"./index.module.css\";\nimport classNames from \"classnames/bind\";\n\nconst cx = classNames.bind(styles);\n\nconst DAY_TEXT = {\n  0: { en: \"sun\", kr: \"일\" },\n  1: { en: \"mon\", kr: \"월\" },\n  2: { en: \"tue\", kr: \"화\" },\n  3: { en: \"wed\", kr: \"수\" },\n  4: { en: \"thu\", kr: \"목\" },\n  5: { en: \"fri\", kr: \"금\" },\n  6: { en: \"sat\", kr: \"토\" },\n};\n\nexport default function AlienCtrl(props) {\n  const { user, aliens, selectedAlien } = useSelector(({ user, room }) => ({\n    user: user.user,\n    aliens: room.aliens,\n    selectedAlien: room.selectedAlien,\n  }));\n\n  let alien = aliens.find((a) => a.id === selectedAlien);\n\n  const challengeMatch = useMatch(\"/challenge/:challengeId/room\");\n  const userMatch = useMatch(\"/user/:userId/room\");\n  // const mainMatch = useMatch(\"/\");\n\n  const dispatch = useDispatch();\n\n  // todo 조건 강화!\n  if (!alien) {\n    return (\n      <div className={cx(\"body\")}>\n        <p>생명체를 선택해주세요.</p>\n      </div>\n    );\n  } else {\n    const todayValue = new Date().getDay();\n    const isPracticeDay = !!alien[DAY_TEXT[todayValue].en];\n\n    return (\n      <div className={cx(\"body\", \"body--selected\")}>\n        <div className={cx(\"row\")}>\n          <h3 className={styles.challengeName}>{`${alien.challenge_name}`}</h3>\n        </div>\n        <div className={cx(\"row\")}>\n          <p className={styles.userName}>\n            {`${alien.user_nickname}`}\n            <span className={styles.authCnt}>\n              {` (${alien.accumulated_count}회 인증)`}\n            </span>\n          </p>\n        </div>\n        <ul className={styles.daylist}>\n          {[0, 1, 2, 3, 4, 5, 6].map((day) => {\n            let dayType = \"default\";\n            if (!!alien[DAY_TEXT[day].en]) dayType = \"selected\";\n            if (day === todayValue && isPracticeDay) dayType = \"today\";\n            // if (!!alien[day] && (new Date()).getDay() = )\n            return (\n              <li key={day} className={cx(\"day\", `day--${dayType}`)}>\n                {DAY_TEXT[day].kr}\n              </li>\n            );\n          })}\n        </ul>\n        <div className={styles.btnRow}>\n          {!challengeMatch && (\n            <Link to={`/challenge/${alien.challenge_id}/room`}>\n              <p className={cx(\"btn\")}>챌린지 어항</p>\n            </Link>\n          )}\n          {!userMatch && (\n            <Link to={`/user/${alien.user_info_id}/room`}>\n              <p className={cx(\"btn\")}>참가자 어항</p>\n            </Link>\n          )}\n          {!!userMatch &&\n            user.login &&\n            user.id === parseInt(alien.user_info_id) && (\n              <PracticeBtn\n                alien={alien}\n                isPracticeDay={isPracticeDay}\n                handleClick={() => dispatch(actions.showAuthRequest(true))}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction PracticeBtn(props) {\n  const { alien, handleClick, isPracticeDay } = props;\n  if (alien.alien_status === 1) {\n    // 졸업\n    return <p className={cx(\"btn\", \"btn--graduated\", \"btn--disabled\")}>졸업</p>;\n  } else if (alien.practice_status === 1) {\n    // 승인 대기\n    return (\n      <p className={cx(\"btn\", \"btn--ready\", \"btn--disabled\")}>승인 대기</p>\n    );\n  } else if (alien.practice_status === 2 || !isPracticeDay) {\n    // 인증 완료\n    return (\n      <p className={cx(\"btn\", \"btn--complete\", \"btn--disabled\")}>인증 완료</p>\n    );\n  } else {\n    // 인증하기\n    return (\n      <p className={cx(\"btn\")} onClick={handleClick}>\n        인증하기\n      </p>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}